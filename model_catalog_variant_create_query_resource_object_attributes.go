/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogVariantCreateQueryResourceObjectAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogVariantCreateQueryResourceObjectAttributes{}

// CatalogVariantCreateQueryResourceObjectAttributes struct for CatalogVariantCreateQueryResourceObjectAttributes
type CatalogVariantCreateQueryResourceObjectAttributes struct {
	// The ID of the catalog item variant in an external system.
	ExternalId string `json:"external_id"`
	// The type of catalog. Currently only \"$default\" is supported.
	CatalogType NullableString `json:"catalog_type,omitempty"`
	// The integration type. Currently only \"$custom\" is supported.
	IntegrationType NullableString `json:"integration_type,omitempty"`
	// The title of the catalog item variant.
	Title string `json:"title"`
	// A description of the catalog item variant.
	Description string `json:"description"`
	// The SKU of the catalog item variant.
	Sku string `json:"sku"`
	// This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values: `1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock. `0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.
	InventoryPolicy NullableInt32 `json:"inventory_policy,omitempty"`
	// The quantity of the catalog item variant currently in stock.
	InventoryQuantity float32 `json:"inventory_quantity"`
	// This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).
	Price float32 `json:"price"`
	// URL pointing to the location of the catalog item variant on your website.
	Url string `json:"url"`
	// URL pointing to the location of a full image of the catalog item variant.
	ImageFullUrl NullableString `json:"image_full_url,omitempty"`
	// URL pointing to the location of an image thumbnail of the catalog item variant.
	ImageThumbnailUrl NullableString `json:"image_thumbnail_url,omitempty"`
	// List of URLs pointing to the locations of images of the catalog item variant.
	Images []string `json:"images,omitempty"`
	// Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.
	CustomMetadata map[string]interface{} `json:"custom_metadata,omitempty"`
	// Boolean value indicating whether the catalog item variant is published.
	Published NullableBool `json:"published,omitempty"`
}

type _CatalogVariantCreateQueryResourceObjectAttributes CatalogVariantCreateQueryResourceObjectAttributes

// NewCatalogVariantCreateQueryResourceObjectAttributes instantiates a new CatalogVariantCreateQueryResourceObjectAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogVariantCreateQueryResourceObjectAttributes(externalId string, title string, description string, sku string, inventoryQuantity float32, price float32, url string) *CatalogVariantCreateQueryResourceObjectAttributes {
	this := CatalogVariantCreateQueryResourceObjectAttributes{}
	this.ExternalId = externalId
	var catalogType string = "$default"
	this.CatalogType = *NewNullableString(&catalogType)
	var integrationType INTEGRATION_TYPE = "$custom"
	this.IntegrationType = *NewNullableString(&integrationType)
	this.Title = title
	this.Description = description
	this.Sku = sku
	var inventoryPolicy INVENTORY_POLICY = 0
	this.InventoryPolicy = *NewNullableInt32(&inventoryPolicy)
	this.InventoryQuantity = inventoryQuantity
	this.Price = price
	this.Url = url
	var published bool = true
	this.Published = *NewNullableBool(&published)
	return &this
}

// NewCatalogVariantCreateQueryResourceObjectAttributesWithDefaults instantiates a new CatalogVariantCreateQueryResourceObjectAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogVariantCreateQueryResourceObjectAttributesWithDefaults() *CatalogVariantCreateQueryResourceObjectAttributes {
	this := CatalogVariantCreateQueryResourceObjectAttributes{}
	var catalogType string = "$default"
	this.CatalogType = *NewNullableString(&catalogType)
	var integrationType INTEGRATION_TYPE = "$custom"
	this.IntegrationType = *NewNullableString(&integrationType)
	var inventoryPolicy INVENTORY_POLICY = 0
	this.InventoryPolicy = *NewNullableInt32(&inventoryPolicy)
	var published bool = true
	this.Published = *NewNullableBool(&published)
	return &this
}

// GetExternalId returns the ExternalId field value
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetExternalId(v string) {
	o.ExternalId = v
}

// GetCatalogType returns the CatalogType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetCatalogType() string {
	if o == nil || IsNil(o.CatalogType.Get()) {
		var ret string
		return ret
	}
	return *o.CatalogType.Get()
}

// GetCatalogTypeOk returns a tuple with the CatalogType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetCatalogTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CatalogType.Get(), o.CatalogType.IsSet()
}

// HasCatalogType returns a boolean if a field has been set.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) HasCatalogType() bool {
	if o != nil && o.CatalogType.IsSet() {
		return true
	}

	return false
}

// SetCatalogType gets a reference to the given NullableString and assigns it to the CatalogType field.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetCatalogType(v string) {
	o.CatalogType.Set(&v)
}
// SetCatalogTypeNil sets the value for CatalogType to be an explicit nil
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetCatalogTypeNil() {
	o.CatalogType.Set(nil)
}

// UnsetCatalogType ensures that no value is present for CatalogType, not even an explicit nil
func (o *CatalogVariantCreateQueryResourceObjectAttributes) UnsetCatalogType() {
	o.CatalogType.Unset()
}

// GetIntegrationType returns the IntegrationType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetIntegrationType() string {
	if o == nil || IsNil(o.IntegrationType.Get()) {
		var ret string
		return ret
	}
	return *o.IntegrationType.Get()
}

// GetIntegrationTypeOk returns a tuple with the IntegrationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetIntegrationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IntegrationType.Get(), o.IntegrationType.IsSet()
}

// HasIntegrationType returns a boolean if a field has been set.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) HasIntegrationType() bool {
	if o != nil && o.IntegrationType.IsSet() {
		return true
	}

	return false
}

// SetIntegrationType gets a reference to the given NullableString and assigns it to the IntegrationType field.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetIntegrationType(v string) {
	o.IntegrationType.Set(&v)
}
// SetIntegrationTypeNil sets the value for IntegrationType to be an explicit nil
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetIntegrationTypeNil() {
	o.IntegrationType.Set(nil)
}

// UnsetIntegrationType ensures that no value is present for IntegrationType, not even an explicit nil
func (o *CatalogVariantCreateQueryResourceObjectAttributes) UnsetIntegrationType() {
	o.IntegrationType.Unset()
}

// GetTitle returns the Title field value
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetDescription(v string) {
	o.Description = v
}

// GetSku returns the Sku field value
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetSku() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sku
}

// GetSkuOk returns a tuple with the Sku field value
// and a boolean to check if the value has been set.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sku, true
}

// SetSku sets field value
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetSku(v string) {
	o.Sku = v
}

// GetInventoryPolicy returns the InventoryPolicy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetInventoryPolicy() int32 {
	if o == nil || IsNil(o.InventoryPolicy.Get()) {
		var ret int32
		return ret
	}
	return *o.InventoryPolicy.Get()
}

// GetInventoryPolicyOk returns a tuple with the InventoryPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetInventoryPolicyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.InventoryPolicy.Get(), o.InventoryPolicy.IsSet()
}

// HasInventoryPolicy returns a boolean if a field has been set.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) HasInventoryPolicy() bool {
	if o != nil && o.InventoryPolicy.IsSet() {
		return true
	}

	return false
}

// SetInventoryPolicy gets a reference to the given NullableInt32 and assigns it to the InventoryPolicy field.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetInventoryPolicy(v int32) {
	o.InventoryPolicy.Set(&v)
}
// SetInventoryPolicyNil sets the value for InventoryPolicy to be an explicit nil
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetInventoryPolicyNil() {
	o.InventoryPolicy.Set(nil)
}

// UnsetInventoryPolicy ensures that no value is present for InventoryPolicy, not even an explicit nil
func (o *CatalogVariantCreateQueryResourceObjectAttributes) UnsetInventoryPolicy() {
	o.InventoryPolicy.Unset()
}

// GetInventoryQuantity returns the InventoryQuantity field value
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetInventoryQuantity() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.InventoryQuantity
}

// GetInventoryQuantityOk returns a tuple with the InventoryQuantity field value
// and a boolean to check if the value has been set.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetInventoryQuantityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InventoryQuantity, true
}

// SetInventoryQuantity sets field value
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetInventoryQuantity(v float32) {
	o.InventoryQuantity = v
}

// GetPrice returns the Price field value
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetPrice(v float32) {
	o.Price = v
}

// GetUrl returns the Url field value
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetUrl(v string) {
	o.Url = v
}

// GetImageFullUrl returns the ImageFullUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetImageFullUrl() string {
	if o == nil || IsNil(o.ImageFullUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ImageFullUrl.Get()
}

// GetImageFullUrlOk returns a tuple with the ImageFullUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetImageFullUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageFullUrl.Get(), o.ImageFullUrl.IsSet()
}

// HasImageFullUrl returns a boolean if a field has been set.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) HasImageFullUrl() bool {
	if o != nil && o.ImageFullUrl.IsSet() {
		return true
	}

	return false
}

// SetImageFullUrl gets a reference to the given NullableString and assigns it to the ImageFullUrl field.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetImageFullUrl(v string) {
	o.ImageFullUrl.Set(&v)
}
// SetImageFullUrlNil sets the value for ImageFullUrl to be an explicit nil
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetImageFullUrlNil() {
	o.ImageFullUrl.Set(nil)
}

// UnsetImageFullUrl ensures that no value is present for ImageFullUrl, not even an explicit nil
func (o *CatalogVariantCreateQueryResourceObjectAttributes) UnsetImageFullUrl() {
	o.ImageFullUrl.Unset()
}

// GetImageThumbnailUrl returns the ImageThumbnailUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetImageThumbnailUrl() string {
	if o == nil || IsNil(o.ImageThumbnailUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ImageThumbnailUrl.Get()
}

// GetImageThumbnailUrlOk returns a tuple with the ImageThumbnailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetImageThumbnailUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageThumbnailUrl.Get(), o.ImageThumbnailUrl.IsSet()
}

// HasImageThumbnailUrl returns a boolean if a field has been set.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) HasImageThumbnailUrl() bool {
	if o != nil && o.ImageThumbnailUrl.IsSet() {
		return true
	}

	return false
}

// SetImageThumbnailUrl gets a reference to the given NullableString and assigns it to the ImageThumbnailUrl field.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetImageThumbnailUrl(v string) {
	o.ImageThumbnailUrl.Set(&v)
}
// SetImageThumbnailUrlNil sets the value for ImageThumbnailUrl to be an explicit nil
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetImageThumbnailUrlNil() {
	o.ImageThumbnailUrl.Set(nil)
}

// UnsetImageThumbnailUrl ensures that no value is present for ImageThumbnailUrl, not even an explicit nil
func (o *CatalogVariantCreateQueryResourceObjectAttributes) UnsetImageThumbnailUrl() {
	o.ImageThumbnailUrl.Unset()
}

// GetImages returns the Images field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetImages() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetImagesOk() ([]string, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []string and assigns it to the Images field.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetImages(v []string) {
	o.Images = v
}

// GetCustomMetadata returns the CustomMetadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetCustomMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomMetadata
}

// GetCustomMetadataOk returns a tuple with the CustomMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetCustomMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomMetadata) {
		return map[string]interface{}{}, false
	}
	return o.CustomMetadata, true
}

// HasCustomMetadata returns a boolean if a field has been set.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) HasCustomMetadata() bool {
	if o != nil && !IsNil(o.CustomMetadata) {
		return true
	}

	return false
}

// SetCustomMetadata gets a reference to the given map[string]interface{} and assigns it to the CustomMetadata field.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetCustomMetadata(v map[string]interface{}) {
	o.CustomMetadata = v
}

// GetPublished returns the Published field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetPublished() bool {
	if o == nil || IsNil(o.Published.Get()) {
		var ret bool
		return ret
	}
	return *o.Published.Get()
}

// GetPublishedOk returns a tuple with the Published field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogVariantCreateQueryResourceObjectAttributes) GetPublishedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Published.Get(), o.Published.IsSet()
}

// HasPublished returns a boolean if a field has been set.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) HasPublished() bool {
	if o != nil && o.Published.IsSet() {
		return true
	}

	return false
}

// SetPublished gets a reference to the given NullableBool and assigns it to the Published field.
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetPublished(v bool) {
	o.Published.Set(&v)
}
// SetPublishedNil sets the value for Published to be an explicit nil
func (o *CatalogVariantCreateQueryResourceObjectAttributes) SetPublishedNil() {
	o.Published.Set(nil)
}

// UnsetPublished ensures that no value is present for Published, not even an explicit nil
func (o *CatalogVariantCreateQueryResourceObjectAttributes) UnsetPublished() {
	o.Published.Unset()
}

func (o CatalogVariantCreateQueryResourceObjectAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogVariantCreateQueryResourceObjectAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["external_id"] = o.ExternalId
	if o.CatalogType.IsSet() {
		toSerialize["catalog_type"] = o.CatalogType.Get()
	}
	if o.IntegrationType.IsSet() {
		toSerialize["integration_type"] = o.IntegrationType.Get()
	}
	toSerialize["title"] = o.Title
	toSerialize["description"] = o.Description
	toSerialize["sku"] = o.Sku
	if o.InventoryPolicy.IsSet() {
		toSerialize["inventory_policy"] = o.InventoryPolicy.Get()
	}
	toSerialize["inventory_quantity"] = o.InventoryQuantity
	toSerialize["price"] = o.Price
	toSerialize["url"] = o.Url
	if o.ImageFullUrl.IsSet() {
		toSerialize["image_full_url"] = o.ImageFullUrl.Get()
	}
	if o.ImageThumbnailUrl.IsSet() {
		toSerialize["image_thumbnail_url"] = o.ImageThumbnailUrl.Get()
	}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	if o.CustomMetadata != nil {
		toSerialize["custom_metadata"] = o.CustomMetadata
	}
	if o.Published.IsSet() {
		toSerialize["published"] = o.Published.Get()
	}
	return toSerialize, nil
}

func (o *CatalogVariantCreateQueryResourceObjectAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"external_id",
		"title",
		"description",
		"sku",
		"inventory_quantity",
		"price",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogVariantCreateQueryResourceObjectAttributes := _CatalogVariantCreateQueryResourceObjectAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogVariantCreateQueryResourceObjectAttributes)

	if err != nil {
		return err
	}

	*o = CatalogVariantCreateQueryResourceObjectAttributes(varCatalogVariantCreateQueryResourceObjectAttributes)

	return err
}

type NullableCatalogVariantCreateQueryResourceObjectAttributes struct {
	value *CatalogVariantCreateQueryResourceObjectAttributes
	isSet bool
}

func (v NullableCatalogVariantCreateQueryResourceObjectAttributes) Get() *CatalogVariantCreateQueryResourceObjectAttributes {
	return v.value
}

func (v *NullableCatalogVariantCreateQueryResourceObjectAttributes) Set(val *CatalogVariantCreateQueryResourceObjectAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogVariantCreateQueryResourceObjectAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogVariantCreateQueryResourceObjectAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogVariantCreateQueryResourceObjectAttributes(val *CatalogVariantCreateQueryResourceObjectAttributes) *NullableCatalogVariantCreateQueryResourceObjectAttributes {
	return &NullableCatalogVariantCreateQueryResourceObjectAttributes{value: val, isSet: true}
}

func (v NullableCatalogVariantCreateQueryResourceObjectAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogVariantCreateQueryResourceObjectAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


