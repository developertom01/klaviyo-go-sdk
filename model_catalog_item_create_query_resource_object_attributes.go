/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogItemCreateQueryResourceObjectAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogItemCreateQueryResourceObjectAttributes{}

// CatalogItemCreateQueryResourceObjectAttributes struct for CatalogItemCreateQueryResourceObjectAttributes
type CatalogItemCreateQueryResourceObjectAttributes struct {
	// The ID of the catalog item in an external system.
	ExternalId string `json:"external_id"`
	// The integration type. Currently only \"$custom\" is supported.
	IntegrationType NullableString `json:"integration_type,omitempty"`
	// The title of the catalog item.
	Title string `json:"title"`
	// This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant).
	Price NullableFloat32 `json:"price,omitempty"`
	// The type of catalog. Currently only \"$default\" is supported.
	CatalogType NullableString `json:"catalog_type,omitempty"`
	// A description of the catalog item.
	Description string `json:"description"`
	// URL pointing to the location of the catalog item on your website.
	Url string `json:"url"`
	// URL pointing to the location of a full image of the catalog item.
	ImageFullUrl NullableString `json:"image_full_url,omitempty"`
	// URL pointing to the location of an image thumbnail of the catalog item
	ImageThumbnailUrl NullableString `json:"image_thumbnail_url,omitempty"`
	// List of URLs pointing to the locations of images of the catalog item.
	Images []string `json:"images,omitempty"`
	// Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb.
	CustomMetadata map[string]interface{} `json:"custom_metadata,omitempty"`
	// Boolean value indicating whether the catalog item is published.
	Published NullableBool `json:"published,omitempty"`
}

type _CatalogItemCreateQueryResourceObjectAttributes CatalogItemCreateQueryResourceObjectAttributes

// NewCatalogItemCreateQueryResourceObjectAttributes instantiates a new CatalogItemCreateQueryResourceObjectAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogItemCreateQueryResourceObjectAttributes(externalId string, title string, description string, url string) *CatalogItemCreateQueryResourceObjectAttributes {
	this := CatalogItemCreateQueryResourceObjectAttributes{}
	this.ExternalId = externalId
	var integrationType INTEGRATION_TYPE = "$custom"
	this.IntegrationType = *NewNullableString(&integrationType)
	this.Title = title
	var catalogType string = "$default"
	this.CatalogType = *NewNullableString(&catalogType)
	this.Description = description
	this.Url = url
	var published bool = true
	this.Published = *NewNullableBool(&published)
	return &this
}

// NewCatalogItemCreateQueryResourceObjectAttributesWithDefaults instantiates a new CatalogItemCreateQueryResourceObjectAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogItemCreateQueryResourceObjectAttributesWithDefaults() *CatalogItemCreateQueryResourceObjectAttributes {
	this := CatalogItemCreateQueryResourceObjectAttributes{}
	var integrationType INTEGRATION_TYPE = "$custom"
	this.IntegrationType = *NewNullableString(&integrationType)
	var catalogType string = "$default"
	this.CatalogType = *NewNullableString(&catalogType)
	var published bool = true
	this.Published = *NewNullableBool(&published)
	return &this
}

// GetExternalId returns the ExternalId field value
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *CatalogItemCreateQueryResourceObjectAttributes) SetExternalId(v string) {
	o.ExternalId = v
}

// GetIntegrationType returns the IntegrationType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetIntegrationType() string {
	if o == nil || IsNil(o.IntegrationType.Get()) {
		var ret string
		return ret
	}
	return *o.IntegrationType.Get()
}

// GetIntegrationTypeOk returns a tuple with the IntegrationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetIntegrationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IntegrationType.Get(), o.IntegrationType.IsSet()
}

// HasIntegrationType returns a boolean if a field has been set.
func (o *CatalogItemCreateQueryResourceObjectAttributes) HasIntegrationType() bool {
	if o != nil && o.IntegrationType.IsSet() {
		return true
	}

	return false
}

// SetIntegrationType gets a reference to the given NullableString and assigns it to the IntegrationType field.
func (o *CatalogItemCreateQueryResourceObjectAttributes) SetIntegrationType(v string) {
	o.IntegrationType.Set(&v)
}
// SetIntegrationTypeNil sets the value for IntegrationType to be an explicit nil
func (o *CatalogItemCreateQueryResourceObjectAttributes) SetIntegrationTypeNil() {
	o.IntegrationType.Set(nil)
}

// UnsetIntegrationType ensures that no value is present for IntegrationType, not even an explicit nil
func (o *CatalogItemCreateQueryResourceObjectAttributes) UnsetIntegrationType() {
	o.IntegrationType.Unset()
}

// GetTitle returns the Title field value
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *CatalogItemCreateQueryResourceObjectAttributes) SetTitle(v string) {
	o.Title = v
}

// GetPrice returns the Price field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetPrice() float32 {
	if o == nil || IsNil(o.Price.Get()) {
		var ret float32
		return ret
	}
	return *o.Price.Get()
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Price.Get(), o.Price.IsSet()
}

// HasPrice returns a boolean if a field has been set.
func (o *CatalogItemCreateQueryResourceObjectAttributes) HasPrice() bool {
	if o != nil && o.Price.IsSet() {
		return true
	}

	return false
}

// SetPrice gets a reference to the given NullableFloat32 and assigns it to the Price field.
func (o *CatalogItemCreateQueryResourceObjectAttributes) SetPrice(v float32) {
	o.Price.Set(&v)
}
// SetPriceNil sets the value for Price to be an explicit nil
func (o *CatalogItemCreateQueryResourceObjectAttributes) SetPriceNil() {
	o.Price.Set(nil)
}

// UnsetPrice ensures that no value is present for Price, not even an explicit nil
func (o *CatalogItemCreateQueryResourceObjectAttributes) UnsetPrice() {
	o.Price.Unset()
}

// GetCatalogType returns the CatalogType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetCatalogType() string {
	if o == nil || IsNil(o.CatalogType.Get()) {
		var ret string
		return ret
	}
	return *o.CatalogType.Get()
}

// GetCatalogTypeOk returns a tuple with the CatalogType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetCatalogTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CatalogType.Get(), o.CatalogType.IsSet()
}

// HasCatalogType returns a boolean if a field has been set.
func (o *CatalogItemCreateQueryResourceObjectAttributes) HasCatalogType() bool {
	if o != nil && o.CatalogType.IsSet() {
		return true
	}

	return false
}

// SetCatalogType gets a reference to the given NullableString and assigns it to the CatalogType field.
func (o *CatalogItemCreateQueryResourceObjectAttributes) SetCatalogType(v string) {
	o.CatalogType.Set(&v)
}
// SetCatalogTypeNil sets the value for CatalogType to be an explicit nil
func (o *CatalogItemCreateQueryResourceObjectAttributes) SetCatalogTypeNil() {
	o.CatalogType.Set(nil)
}

// UnsetCatalogType ensures that no value is present for CatalogType, not even an explicit nil
func (o *CatalogItemCreateQueryResourceObjectAttributes) UnsetCatalogType() {
	o.CatalogType.Unset()
}

// GetDescription returns the Description field value
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CatalogItemCreateQueryResourceObjectAttributes) SetDescription(v string) {
	o.Description = v
}

// GetUrl returns the Url field value
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *CatalogItemCreateQueryResourceObjectAttributes) SetUrl(v string) {
	o.Url = v
}

// GetImageFullUrl returns the ImageFullUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetImageFullUrl() string {
	if o == nil || IsNil(o.ImageFullUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ImageFullUrl.Get()
}

// GetImageFullUrlOk returns a tuple with the ImageFullUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetImageFullUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageFullUrl.Get(), o.ImageFullUrl.IsSet()
}

// HasImageFullUrl returns a boolean if a field has been set.
func (o *CatalogItemCreateQueryResourceObjectAttributes) HasImageFullUrl() bool {
	if o != nil && o.ImageFullUrl.IsSet() {
		return true
	}

	return false
}

// SetImageFullUrl gets a reference to the given NullableString and assigns it to the ImageFullUrl field.
func (o *CatalogItemCreateQueryResourceObjectAttributes) SetImageFullUrl(v string) {
	o.ImageFullUrl.Set(&v)
}
// SetImageFullUrlNil sets the value for ImageFullUrl to be an explicit nil
func (o *CatalogItemCreateQueryResourceObjectAttributes) SetImageFullUrlNil() {
	o.ImageFullUrl.Set(nil)
}

// UnsetImageFullUrl ensures that no value is present for ImageFullUrl, not even an explicit nil
func (o *CatalogItemCreateQueryResourceObjectAttributes) UnsetImageFullUrl() {
	o.ImageFullUrl.Unset()
}

// GetImageThumbnailUrl returns the ImageThumbnailUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetImageThumbnailUrl() string {
	if o == nil || IsNil(o.ImageThumbnailUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ImageThumbnailUrl.Get()
}

// GetImageThumbnailUrlOk returns a tuple with the ImageThumbnailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetImageThumbnailUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageThumbnailUrl.Get(), o.ImageThumbnailUrl.IsSet()
}

// HasImageThumbnailUrl returns a boolean if a field has been set.
func (o *CatalogItemCreateQueryResourceObjectAttributes) HasImageThumbnailUrl() bool {
	if o != nil && o.ImageThumbnailUrl.IsSet() {
		return true
	}

	return false
}

// SetImageThumbnailUrl gets a reference to the given NullableString and assigns it to the ImageThumbnailUrl field.
func (o *CatalogItemCreateQueryResourceObjectAttributes) SetImageThumbnailUrl(v string) {
	o.ImageThumbnailUrl.Set(&v)
}
// SetImageThumbnailUrlNil sets the value for ImageThumbnailUrl to be an explicit nil
func (o *CatalogItemCreateQueryResourceObjectAttributes) SetImageThumbnailUrlNil() {
	o.ImageThumbnailUrl.Set(nil)
}

// UnsetImageThumbnailUrl ensures that no value is present for ImageThumbnailUrl, not even an explicit nil
func (o *CatalogItemCreateQueryResourceObjectAttributes) UnsetImageThumbnailUrl() {
	o.ImageThumbnailUrl.Unset()
}

// GetImages returns the Images field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetImages() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetImagesOk() ([]string, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *CatalogItemCreateQueryResourceObjectAttributes) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []string and assigns it to the Images field.
func (o *CatalogItemCreateQueryResourceObjectAttributes) SetImages(v []string) {
	o.Images = v
}

// GetCustomMetadata returns the CustomMetadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetCustomMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomMetadata
}

// GetCustomMetadataOk returns a tuple with the CustomMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetCustomMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomMetadata) {
		return map[string]interface{}{}, false
	}
	return o.CustomMetadata, true
}

// HasCustomMetadata returns a boolean if a field has been set.
func (o *CatalogItemCreateQueryResourceObjectAttributes) HasCustomMetadata() bool {
	if o != nil && !IsNil(o.CustomMetadata) {
		return true
	}

	return false
}

// SetCustomMetadata gets a reference to the given map[string]interface{} and assigns it to the CustomMetadata field.
func (o *CatalogItemCreateQueryResourceObjectAttributes) SetCustomMetadata(v map[string]interface{}) {
	o.CustomMetadata = v
}

// GetPublished returns the Published field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetPublished() bool {
	if o == nil || IsNil(o.Published.Get()) {
		var ret bool
		return ret
	}
	return *o.Published.Get()
}

// GetPublishedOk returns a tuple with the Published field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogItemCreateQueryResourceObjectAttributes) GetPublishedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Published.Get(), o.Published.IsSet()
}

// HasPublished returns a boolean if a field has been set.
func (o *CatalogItemCreateQueryResourceObjectAttributes) HasPublished() bool {
	if o != nil && o.Published.IsSet() {
		return true
	}

	return false
}

// SetPublished gets a reference to the given NullableBool and assigns it to the Published field.
func (o *CatalogItemCreateQueryResourceObjectAttributes) SetPublished(v bool) {
	o.Published.Set(&v)
}
// SetPublishedNil sets the value for Published to be an explicit nil
func (o *CatalogItemCreateQueryResourceObjectAttributes) SetPublishedNil() {
	o.Published.Set(nil)
}

// UnsetPublished ensures that no value is present for Published, not even an explicit nil
func (o *CatalogItemCreateQueryResourceObjectAttributes) UnsetPublished() {
	o.Published.Unset()
}

func (o CatalogItemCreateQueryResourceObjectAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogItemCreateQueryResourceObjectAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["external_id"] = o.ExternalId
	if o.IntegrationType.IsSet() {
		toSerialize["integration_type"] = o.IntegrationType.Get()
	}
	toSerialize["title"] = o.Title
	if o.Price.IsSet() {
		toSerialize["price"] = o.Price.Get()
	}
	if o.CatalogType.IsSet() {
		toSerialize["catalog_type"] = o.CatalogType.Get()
	}
	toSerialize["description"] = o.Description
	toSerialize["url"] = o.Url
	if o.ImageFullUrl.IsSet() {
		toSerialize["image_full_url"] = o.ImageFullUrl.Get()
	}
	if o.ImageThumbnailUrl.IsSet() {
		toSerialize["image_thumbnail_url"] = o.ImageThumbnailUrl.Get()
	}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	if o.CustomMetadata != nil {
		toSerialize["custom_metadata"] = o.CustomMetadata
	}
	if o.Published.IsSet() {
		toSerialize["published"] = o.Published.Get()
	}
	return toSerialize, nil
}

func (o *CatalogItemCreateQueryResourceObjectAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"external_id",
		"title",
		"description",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogItemCreateQueryResourceObjectAttributes := _CatalogItemCreateQueryResourceObjectAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogItemCreateQueryResourceObjectAttributes)

	if err != nil {
		return err
	}

	*o = CatalogItemCreateQueryResourceObjectAttributes(varCatalogItemCreateQueryResourceObjectAttributes)

	return err
}

type NullableCatalogItemCreateQueryResourceObjectAttributes struct {
	value *CatalogItemCreateQueryResourceObjectAttributes
	isSet bool
}

func (v NullableCatalogItemCreateQueryResourceObjectAttributes) Get() *CatalogItemCreateQueryResourceObjectAttributes {
	return v.value
}

func (v *NullableCatalogItemCreateQueryResourceObjectAttributes) Set(val *CatalogItemCreateQueryResourceObjectAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogItemCreateQueryResourceObjectAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogItemCreateQueryResourceObjectAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogItemCreateQueryResourceObjectAttributes(val *CatalogItemCreateQueryResourceObjectAttributes) *NullableCatalogItemCreateQueryResourceObjectAttributes {
	return &NullableCatalogItemCreateQueryResourceObjectAttributes{value: val, isSet: true}
}

func (v NullableCatalogItemCreateQueryResourceObjectAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogItemCreateQueryResourceObjectAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


