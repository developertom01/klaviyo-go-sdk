/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogCategoryCreateQueryResourceObjectAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogCategoryCreateQueryResourceObjectAttributes{}

// CatalogCategoryCreateQueryResourceObjectAttributes struct for CatalogCategoryCreateQueryResourceObjectAttributes
type CatalogCategoryCreateQueryResourceObjectAttributes struct {
	// The ID of the catalog category in an external system.
	ExternalId string `json:"external_id"`
	// The name of the catalog category.
	Name string `json:"name"`
	// The integration type. Currently only \"$custom\" is supported.
	IntegrationType NullableString `json:"integration_type,omitempty"`
	// The type of catalog. Currently only \"$default\" is supported.
	CatalogType NullableString `json:"catalog_type,omitempty"`
}

type _CatalogCategoryCreateQueryResourceObjectAttributes CatalogCategoryCreateQueryResourceObjectAttributes

// NewCatalogCategoryCreateQueryResourceObjectAttributes instantiates a new CatalogCategoryCreateQueryResourceObjectAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogCategoryCreateQueryResourceObjectAttributes(externalId string, name string) *CatalogCategoryCreateQueryResourceObjectAttributes {
	this := CatalogCategoryCreateQueryResourceObjectAttributes{}
	this.ExternalId = externalId
	this.Name = name
	var integrationType INTEGRATION_TYPE = "$custom"
	this.IntegrationType = *NewNullableString(&integrationType)
	var catalogType string = "$default"
	this.CatalogType = *NewNullableString(&catalogType)
	return &this
}

// NewCatalogCategoryCreateQueryResourceObjectAttributesWithDefaults instantiates a new CatalogCategoryCreateQueryResourceObjectAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogCategoryCreateQueryResourceObjectAttributesWithDefaults() *CatalogCategoryCreateQueryResourceObjectAttributes {
	this := CatalogCategoryCreateQueryResourceObjectAttributes{}
	var integrationType INTEGRATION_TYPE = "$custom"
	this.IntegrationType = *NewNullableString(&integrationType)
	var catalogType string = "$default"
	this.CatalogType = *NewNullableString(&catalogType)
	return &this
}

// GetExternalId returns the ExternalId field value
func (o *CatalogCategoryCreateQueryResourceObjectAttributes) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *CatalogCategoryCreateQueryResourceObjectAttributes) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *CatalogCategoryCreateQueryResourceObjectAttributes) SetExternalId(v string) {
	o.ExternalId = v
}

// GetName returns the Name field value
func (o *CatalogCategoryCreateQueryResourceObjectAttributes) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CatalogCategoryCreateQueryResourceObjectAttributes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CatalogCategoryCreateQueryResourceObjectAttributes) SetName(v string) {
	o.Name = v
}

// GetIntegrationType returns the IntegrationType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogCategoryCreateQueryResourceObjectAttributes) GetIntegrationType() string {
	if o == nil || IsNil(o.IntegrationType.Get()) {
		var ret string
		return ret
	}
	return *o.IntegrationType.Get()
}

// GetIntegrationTypeOk returns a tuple with the IntegrationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogCategoryCreateQueryResourceObjectAttributes) GetIntegrationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IntegrationType.Get(), o.IntegrationType.IsSet()
}

// HasIntegrationType returns a boolean if a field has been set.
func (o *CatalogCategoryCreateQueryResourceObjectAttributes) HasIntegrationType() bool {
	if o != nil && o.IntegrationType.IsSet() {
		return true
	}

	return false
}

// SetIntegrationType gets a reference to the given NullableString and assigns it to the IntegrationType field.
func (o *CatalogCategoryCreateQueryResourceObjectAttributes) SetIntegrationType(v string) {
	o.IntegrationType.Set(&v)
}
// SetIntegrationTypeNil sets the value for IntegrationType to be an explicit nil
func (o *CatalogCategoryCreateQueryResourceObjectAttributes) SetIntegrationTypeNil() {
	o.IntegrationType.Set(nil)
}

// UnsetIntegrationType ensures that no value is present for IntegrationType, not even an explicit nil
func (o *CatalogCategoryCreateQueryResourceObjectAttributes) UnsetIntegrationType() {
	o.IntegrationType.Unset()
}

// GetCatalogType returns the CatalogType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogCategoryCreateQueryResourceObjectAttributes) GetCatalogType() string {
	if o == nil || IsNil(o.CatalogType.Get()) {
		var ret string
		return ret
	}
	return *o.CatalogType.Get()
}

// GetCatalogTypeOk returns a tuple with the CatalogType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogCategoryCreateQueryResourceObjectAttributes) GetCatalogTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CatalogType.Get(), o.CatalogType.IsSet()
}

// HasCatalogType returns a boolean if a field has been set.
func (o *CatalogCategoryCreateQueryResourceObjectAttributes) HasCatalogType() bool {
	if o != nil && o.CatalogType.IsSet() {
		return true
	}

	return false
}

// SetCatalogType gets a reference to the given NullableString and assigns it to the CatalogType field.
func (o *CatalogCategoryCreateQueryResourceObjectAttributes) SetCatalogType(v string) {
	o.CatalogType.Set(&v)
}
// SetCatalogTypeNil sets the value for CatalogType to be an explicit nil
func (o *CatalogCategoryCreateQueryResourceObjectAttributes) SetCatalogTypeNil() {
	o.CatalogType.Set(nil)
}

// UnsetCatalogType ensures that no value is present for CatalogType, not even an explicit nil
func (o *CatalogCategoryCreateQueryResourceObjectAttributes) UnsetCatalogType() {
	o.CatalogType.Unset()
}

func (o CatalogCategoryCreateQueryResourceObjectAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogCategoryCreateQueryResourceObjectAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["external_id"] = o.ExternalId
	toSerialize["name"] = o.Name
	if o.IntegrationType.IsSet() {
		toSerialize["integration_type"] = o.IntegrationType.Get()
	}
	if o.CatalogType.IsSet() {
		toSerialize["catalog_type"] = o.CatalogType.Get()
	}
	return toSerialize, nil
}

func (o *CatalogCategoryCreateQueryResourceObjectAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"external_id",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogCategoryCreateQueryResourceObjectAttributes := _CatalogCategoryCreateQueryResourceObjectAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogCategoryCreateQueryResourceObjectAttributes)

	if err != nil {
		return err
	}

	*o = CatalogCategoryCreateQueryResourceObjectAttributes(varCatalogCategoryCreateQueryResourceObjectAttributes)

	return err
}

type NullableCatalogCategoryCreateQueryResourceObjectAttributes struct {
	value *CatalogCategoryCreateQueryResourceObjectAttributes
	isSet bool
}

func (v NullableCatalogCategoryCreateQueryResourceObjectAttributes) Get() *CatalogCategoryCreateQueryResourceObjectAttributes {
	return v.value
}

func (v *NullableCatalogCategoryCreateQueryResourceObjectAttributes) Set(val *CatalogCategoryCreateQueryResourceObjectAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogCategoryCreateQueryResourceObjectAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogCategoryCreateQueryResourceObjectAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogCategoryCreateQueryResourceObjectAttributes(val *CatalogCategoryCreateQueryResourceObjectAttributes) *NullableCatalogCategoryCreateQueryResourceObjectAttributes {
	return &NullableCatalogCategoryCreateQueryResourceObjectAttributes{value: val, isSet: true}
}

func (v NullableCatalogCategoryCreateQueryResourceObjectAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogCategoryCreateQueryResourceObjectAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


