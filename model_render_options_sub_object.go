/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
)

// checks if the RenderOptionsSubObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RenderOptionsSubObject{}

// RenderOptionsSubObject struct for RenderOptionsSubObject
type RenderOptionsSubObject struct {
	ShortenLinks NullableBool `json:"shorten_links,omitempty"`
	AddOrgPrefix NullableBool `json:"add_org_prefix,omitempty"`
	AddInfoLink NullableBool `json:"add_info_link,omitempty"`
	AddOptOutLanguage NullableBool `json:"add_opt_out_language,omitempty"`
}

// NewRenderOptionsSubObject instantiates a new RenderOptionsSubObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenderOptionsSubObject() *RenderOptionsSubObject {
	this := RenderOptionsSubObject{}
	var shortenLinks bool = true
	this.ShortenLinks = *NewNullableBool(&shortenLinks)
	var addOrgPrefix bool = true
	this.AddOrgPrefix = *NewNullableBool(&addOrgPrefix)
	var addInfoLink bool = true
	this.AddInfoLink = *NewNullableBool(&addInfoLink)
	var addOptOutLanguage bool = false
	this.AddOptOutLanguage = *NewNullableBool(&addOptOutLanguage)
	return &this
}

// NewRenderOptionsSubObjectWithDefaults instantiates a new RenderOptionsSubObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenderOptionsSubObjectWithDefaults() *RenderOptionsSubObject {
	this := RenderOptionsSubObject{}
	var shortenLinks bool = true
	this.ShortenLinks = *NewNullableBool(&shortenLinks)
	var addOrgPrefix bool = true
	this.AddOrgPrefix = *NewNullableBool(&addOrgPrefix)
	var addInfoLink bool = true
	this.AddInfoLink = *NewNullableBool(&addInfoLink)
	var addOptOutLanguage bool = false
	this.AddOptOutLanguage = *NewNullableBool(&addOptOutLanguage)
	return &this
}

// GetShortenLinks returns the ShortenLinks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RenderOptionsSubObject) GetShortenLinks() bool {
	if o == nil || IsNil(o.ShortenLinks.Get()) {
		var ret bool
		return ret
	}
	return *o.ShortenLinks.Get()
}

// GetShortenLinksOk returns a tuple with the ShortenLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RenderOptionsSubObject) GetShortenLinksOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShortenLinks.Get(), o.ShortenLinks.IsSet()
}

// HasShortenLinks returns a boolean if a field has been set.
func (o *RenderOptionsSubObject) HasShortenLinks() bool {
	if o != nil && o.ShortenLinks.IsSet() {
		return true
	}

	return false
}

// SetShortenLinks gets a reference to the given NullableBool and assigns it to the ShortenLinks field.
func (o *RenderOptionsSubObject) SetShortenLinks(v bool) {
	o.ShortenLinks.Set(&v)
}
// SetShortenLinksNil sets the value for ShortenLinks to be an explicit nil
func (o *RenderOptionsSubObject) SetShortenLinksNil() {
	o.ShortenLinks.Set(nil)
}

// UnsetShortenLinks ensures that no value is present for ShortenLinks, not even an explicit nil
func (o *RenderOptionsSubObject) UnsetShortenLinks() {
	o.ShortenLinks.Unset()
}

// GetAddOrgPrefix returns the AddOrgPrefix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RenderOptionsSubObject) GetAddOrgPrefix() bool {
	if o == nil || IsNil(o.AddOrgPrefix.Get()) {
		var ret bool
		return ret
	}
	return *o.AddOrgPrefix.Get()
}

// GetAddOrgPrefixOk returns a tuple with the AddOrgPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RenderOptionsSubObject) GetAddOrgPrefixOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddOrgPrefix.Get(), o.AddOrgPrefix.IsSet()
}

// HasAddOrgPrefix returns a boolean if a field has been set.
func (o *RenderOptionsSubObject) HasAddOrgPrefix() bool {
	if o != nil && o.AddOrgPrefix.IsSet() {
		return true
	}

	return false
}

// SetAddOrgPrefix gets a reference to the given NullableBool and assigns it to the AddOrgPrefix field.
func (o *RenderOptionsSubObject) SetAddOrgPrefix(v bool) {
	o.AddOrgPrefix.Set(&v)
}
// SetAddOrgPrefixNil sets the value for AddOrgPrefix to be an explicit nil
func (o *RenderOptionsSubObject) SetAddOrgPrefixNil() {
	o.AddOrgPrefix.Set(nil)
}

// UnsetAddOrgPrefix ensures that no value is present for AddOrgPrefix, not even an explicit nil
func (o *RenderOptionsSubObject) UnsetAddOrgPrefix() {
	o.AddOrgPrefix.Unset()
}

// GetAddInfoLink returns the AddInfoLink field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RenderOptionsSubObject) GetAddInfoLink() bool {
	if o == nil || IsNil(o.AddInfoLink.Get()) {
		var ret bool
		return ret
	}
	return *o.AddInfoLink.Get()
}

// GetAddInfoLinkOk returns a tuple with the AddInfoLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RenderOptionsSubObject) GetAddInfoLinkOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddInfoLink.Get(), o.AddInfoLink.IsSet()
}

// HasAddInfoLink returns a boolean if a field has been set.
func (o *RenderOptionsSubObject) HasAddInfoLink() bool {
	if o != nil && o.AddInfoLink.IsSet() {
		return true
	}

	return false
}

// SetAddInfoLink gets a reference to the given NullableBool and assigns it to the AddInfoLink field.
func (o *RenderOptionsSubObject) SetAddInfoLink(v bool) {
	o.AddInfoLink.Set(&v)
}
// SetAddInfoLinkNil sets the value for AddInfoLink to be an explicit nil
func (o *RenderOptionsSubObject) SetAddInfoLinkNil() {
	o.AddInfoLink.Set(nil)
}

// UnsetAddInfoLink ensures that no value is present for AddInfoLink, not even an explicit nil
func (o *RenderOptionsSubObject) UnsetAddInfoLink() {
	o.AddInfoLink.Unset()
}

// GetAddOptOutLanguage returns the AddOptOutLanguage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RenderOptionsSubObject) GetAddOptOutLanguage() bool {
	if o == nil || IsNil(o.AddOptOutLanguage.Get()) {
		var ret bool
		return ret
	}
	return *o.AddOptOutLanguage.Get()
}

// GetAddOptOutLanguageOk returns a tuple with the AddOptOutLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RenderOptionsSubObject) GetAddOptOutLanguageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddOptOutLanguage.Get(), o.AddOptOutLanguage.IsSet()
}

// HasAddOptOutLanguage returns a boolean if a field has been set.
func (o *RenderOptionsSubObject) HasAddOptOutLanguage() bool {
	if o != nil && o.AddOptOutLanguage.IsSet() {
		return true
	}

	return false
}

// SetAddOptOutLanguage gets a reference to the given NullableBool and assigns it to the AddOptOutLanguage field.
func (o *RenderOptionsSubObject) SetAddOptOutLanguage(v bool) {
	o.AddOptOutLanguage.Set(&v)
}
// SetAddOptOutLanguageNil sets the value for AddOptOutLanguage to be an explicit nil
func (o *RenderOptionsSubObject) SetAddOptOutLanguageNil() {
	o.AddOptOutLanguage.Set(nil)
}

// UnsetAddOptOutLanguage ensures that no value is present for AddOptOutLanguage, not even an explicit nil
func (o *RenderOptionsSubObject) UnsetAddOptOutLanguage() {
	o.AddOptOutLanguage.Unset()
}

func (o RenderOptionsSubObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RenderOptionsSubObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ShortenLinks.IsSet() {
		toSerialize["shorten_links"] = o.ShortenLinks.Get()
	}
	if o.AddOrgPrefix.IsSet() {
		toSerialize["add_org_prefix"] = o.AddOrgPrefix.Get()
	}
	if o.AddInfoLink.IsSet() {
		toSerialize["add_info_link"] = o.AddInfoLink.Get()
	}
	if o.AddOptOutLanguage.IsSet() {
		toSerialize["add_opt_out_language"] = o.AddOptOutLanguage.Get()
	}
	return toSerialize, nil
}

type NullableRenderOptionsSubObject struct {
	value *RenderOptionsSubObject
	isSet bool
}

func (v NullableRenderOptionsSubObject) Get() *RenderOptionsSubObject {
	return v.value
}

func (v *NullableRenderOptionsSubObject) Set(val *RenderOptionsSubObject) {
	v.value = val
	v.isSet = true
}

func (v NullableRenderOptionsSubObject) IsSet() bool {
	return v.isSet
}

func (v *NullableRenderOptionsSubObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenderOptionsSubObject(val *RenderOptionsSubObject) *NullableRenderOptionsSubObject {
	return &NullableRenderOptionsSubObject{value: val, isSet: true}
}

func (v NullableRenderOptionsSubObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenderOptionsSubObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


