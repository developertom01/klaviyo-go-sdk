/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SMSRenderOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SMSRenderOptions{}

// SMSRenderOptions struct for SMSRenderOptions
type SMSRenderOptions struct {
	ShortenLinks bool `json:"shorten_links"`
	AddOrgPrefix bool `json:"add_org_prefix"`
	AddInfoLink bool `json:"add_info_link"`
	AddOptOutLanguage bool `json:"add_opt_out_language"`
}

type _SMSRenderOptions SMSRenderOptions

// NewSMSRenderOptions instantiates a new SMSRenderOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSMSRenderOptions(shortenLinks bool, addOrgPrefix bool, addInfoLink bool, addOptOutLanguage bool) *SMSRenderOptions {
	this := SMSRenderOptions{}
	this.ShortenLinks = shortenLinks
	this.AddOrgPrefix = addOrgPrefix
	this.AddInfoLink = addInfoLink
	this.AddOptOutLanguage = addOptOutLanguage
	return &this
}

// NewSMSRenderOptionsWithDefaults instantiates a new SMSRenderOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSMSRenderOptionsWithDefaults() *SMSRenderOptions {
	this := SMSRenderOptions{}
	return &this
}

// GetShortenLinks returns the ShortenLinks field value
func (o *SMSRenderOptions) GetShortenLinks() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ShortenLinks
}

// GetShortenLinksOk returns a tuple with the ShortenLinks field value
// and a boolean to check if the value has been set.
func (o *SMSRenderOptions) GetShortenLinksOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShortenLinks, true
}

// SetShortenLinks sets field value
func (o *SMSRenderOptions) SetShortenLinks(v bool) {
	o.ShortenLinks = v
}

// GetAddOrgPrefix returns the AddOrgPrefix field value
func (o *SMSRenderOptions) GetAddOrgPrefix() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AddOrgPrefix
}

// GetAddOrgPrefixOk returns a tuple with the AddOrgPrefix field value
// and a boolean to check if the value has been set.
func (o *SMSRenderOptions) GetAddOrgPrefixOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddOrgPrefix, true
}

// SetAddOrgPrefix sets field value
func (o *SMSRenderOptions) SetAddOrgPrefix(v bool) {
	o.AddOrgPrefix = v
}

// GetAddInfoLink returns the AddInfoLink field value
func (o *SMSRenderOptions) GetAddInfoLink() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AddInfoLink
}

// GetAddInfoLinkOk returns a tuple with the AddInfoLink field value
// and a boolean to check if the value has been set.
func (o *SMSRenderOptions) GetAddInfoLinkOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddInfoLink, true
}

// SetAddInfoLink sets field value
func (o *SMSRenderOptions) SetAddInfoLink(v bool) {
	o.AddInfoLink = v
}

// GetAddOptOutLanguage returns the AddOptOutLanguage field value
func (o *SMSRenderOptions) GetAddOptOutLanguage() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AddOptOutLanguage
}

// GetAddOptOutLanguageOk returns a tuple with the AddOptOutLanguage field value
// and a boolean to check if the value has been set.
func (o *SMSRenderOptions) GetAddOptOutLanguageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddOptOutLanguage, true
}

// SetAddOptOutLanguage sets field value
func (o *SMSRenderOptions) SetAddOptOutLanguage(v bool) {
	o.AddOptOutLanguage = v
}

func (o SMSRenderOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SMSRenderOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["shorten_links"] = o.ShortenLinks
	toSerialize["add_org_prefix"] = o.AddOrgPrefix
	toSerialize["add_info_link"] = o.AddInfoLink
	toSerialize["add_opt_out_language"] = o.AddOptOutLanguage
	return toSerialize, nil
}

func (o *SMSRenderOptions) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"shorten_links",
		"add_org_prefix",
		"add_info_link",
		"add_opt_out_language",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSMSRenderOptions := _SMSRenderOptions{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSMSRenderOptions)

	if err != nil {
		return err
	}

	*o = SMSRenderOptions(varSMSRenderOptions)

	return err
}

type NullableSMSRenderOptions struct {
	value *SMSRenderOptions
	isSet bool
}

func (v NullableSMSRenderOptions) Get() *SMSRenderOptions {
	return v.value
}

func (v *NullableSMSRenderOptions) Set(val *SMSRenderOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableSMSRenderOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableSMSRenderOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSMSRenderOptions(val *SMSRenderOptions) *NullableSMSRenderOptions {
	return &NullableSMSRenderOptions{value: val, isSet: true}
}

func (v NullableSMSRenderOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSMSRenderOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


