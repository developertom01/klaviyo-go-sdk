/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the APIJobErrorPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &APIJobErrorPayload{}

// APIJobErrorPayload struct for APIJobErrorPayload
type APIJobErrorPayload struct {
	// Unique identifier for the error.
	Id string `json:"id"`
	// A code for classifying the error type.
	Code string `json:"code"`
	// A high-level message about the error.
	Title string `json:"title"`
	// Specific details about the error.
	Detail string `json:"detail"`
	Source ErrorSource `json:"source"`
}

type _APIJobErrorPayload APIJobErrorPayload

// NewAPIJobErrorPayload instantiates a new APIJobErrorPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIJobErrorPayload(id string, code string, title string, detail string, source ErrorSource) *APIJobErrorPayload {
	this := APIJobErrorPayload{}
	this.Id = id
	this.Code = code
	this.Title = title
	this.Detail = detail
	this.Source = source
	return &this
}

// NewAPIJobErrorPayloadWithDefaults instantiates a new APIJobErrorPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIJobErrorPayloadWithDefaults() *APIJobErrorPayload {
	this := APIJobErrorPayload{}
	return &this
}

// GetId returns the Id field value
func (o *APIJobErrorPayload) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *APIJobErrorPayload) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *APIJobErrorPayload) SetId(v string) {
	o.Id = v
}

// GetCode returns the Code field value
func (o *APIJobErrorPayload) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *APIJobErrorPayload) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *APIJobErrorPayload) SetCode(v string) {
	o.Code = v
}

// GetTitle returns the Title field value
func (o *APIJobErrorPayload) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *APIJobErrorPayload) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *APIJobErrorPayload) SetTitle(v string) {
	o.Title = v
}

// GetDetail returns the Detail field value
func (o *APIJobErrorPayload) GetDetail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Detail
}

// GetDetailOk returns a tuple with the Detail field value
// and a boolean to check if the value has been set.
func (o *APIJobErrorPayload) GetDetailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Detail, true
}

// SetDetail sets field value
func (o *APIJobErrorPayload) SetDetail(v string) {
	o.Detail = v
}

// GetSource returns the Source field value
func (o *APIJobErrorPayload) GetSource() ErrorSource {
	if o == nil {
		var ret ErrorSource
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *APIJobErrorPayload) GetSourceOk() (*ErrorSource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *APIJobErrorPayload) SetSource(v ErrorSource) {
	o.Source = v
}

func (o APIJobErrorPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APIJobErrorPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["code"] = o.Code
	toSerialize["title"] = o.Title
	toSerialize["detail"] = o.Detail
	toSerialize["source"] = o.Source
	return toSerialize, nil
}

func (o *APIJobErrorPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"code",
		"title",
		"detail",
		"source",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAPIJobErrorPayload := _APIJobErrorPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAPIJobErrorPayload)

	if err != nil {
		return err
	}

	*o = APIJobErrorPayload(varAPIJobErrorPayload)

	return err
}

type NullableAPIJobErrorPayload struct {
	value *APIJobErrorPayload
	isSet bool
}

func (v NullableAPIJobErrorPayload) Get() *APIJobErrorPayload {
	return v.value
}

func (v *NullableAPIJobErrorPayload) Set(val *APIJobErrorPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIJobErrorPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIJobErrorPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIJobErrorPayload(val *APIJobErrorPayload) *NullableAPIJobErrorPayload {
	return &NullableAPIJobErrorPayload{value: val, isSet: true}
}

func (v NullableAPIJobErrorPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIJobErrorPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


