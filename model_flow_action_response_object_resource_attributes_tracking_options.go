/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
	"fmt"
)

// FlowActionResponseObjectResourceAttributesTrackingOptions - struct for FlowActionResponseObjectResourceAttributesTrackingOptions
type FlowActionResponseObjectResourceAttributesTrackingOptions struct {
	EmailTrackingOptions *EmailTrackingOptions
	SMSTrackingOptions *SMSTrackingOptions
}

// EmailTrackingOptionsAsFlowActionResponseObjectResourceAttributesTrackingOptions is a convenience function that returns EmailTrackingOptions wrapped in FlowActionResponseObjectResourceAttributesTrackingOptions
func EmailTrackingOptionsAsFlowActionResponseObjectResourceAttributesTrackingOptions(v *EmailTrackingOptions) FlowActionResponseObjectResourceAttributesTrackingOptions {
	return FlowActionResponseObjectResourceAttributesTrackingOptions{
		EmailTrackingOptions: v,
	}
}

// SMSTrackingOptionsAsFlowActionResponseObjectResourceAttributesTrackingOptions is a convenience function that returns SMSTrackingOptions wrapped in FlowActionResponseObjectResourceAttributesTrackingOptions
func SMSTrackingOptionsAsFlowActionResponseObjectResourceAttributesTrackingOptions(v *SMSTrackingOptions) FlowActionResponseObjectResourceAttributesTrackingOptions {
	return FlowActionResponseObjectResourceAttributesTrackingOptions{
		SMSTrackingOptions: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *FlowActionResponseObjectResourceAttributesTrackingOptions) UnmarshalJSON(data []byte) error {
	var err error
	// this object is nullable so check if the payload is null or empty string
	if string(data) == "" || string(data) == "{}" {
		return nil
	}

	match := 0
	// try to unmarshal data into EmailTrackingOptions
	err = newStrictDecoder(data).Decode(&dst.EmailTrackingOptions)
	if err == nil {
		jsonEmailTrackingOptions, _ := json.Marshal(dst.EmailTrackingOptions)
		if string(jsonEmailTrackingOptions) == "{}" { // empty struct
			dst.EmailTrackingOptions = nil
		} else {
			match++
		}
	} else {
		dst.EmailTrackingOptions = nil
	}

	// try to unmarshal data into SMSTrackingOptions
	err = newStrictDecoder(data).Decode(&dst.SMSTrackingOptions)
	if err == nil {
		jsonSMSTrackingOptions, _ := json.Marshal(dst.SMSTrackingOptions)
		if string(jsonSMSTrackingOptions) == "{}" { // empty struct
			dst.SMSTrackingOptions = nil
		} else {
			match++
		}
	} else {
		dst.SMSTrackingOptions = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.EmailTrackingOptions = nil
		dst.SMSTrackingOptions = nil

		return fmt.Errorf("data matches more than one schema in oneOf(FlowActionResponseObjectResourceAttributesTrackingOptions)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(FlowActionResponseObjectResourceAttributesTrackingOptions)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src FlowActionResponseObjectResourceAttributesTrackingOptions) MarshalJSON() ([]byte, error) {
	if src.EmailTrackingOptions != nil {
		return json.Marshal(&src.EmailTrackingOptions)
	}

	if src.SMSTrackingOptions != nil {
		return json.Marshal(&src.SMSTrackingOptions)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *FlowActionResponseObjectResourceAttributesTrackingOptions) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.EmailTrackingOptions != nil {
		return obj.EmailTrackingOptions
	}

	if obj.SMSTrackingOptions != nil {
		return obj.SMSTrackingOptions
	}

	// all schemas are nil
	return nil
}

type NullableFlowActionResponseObjectResourceAttributesTrackingOptions struct {
	value *FlowActionResponseObjectResourceAttributesTrackingOptions
	isSet bool
}

func (v NullableFlowActionResponseObjectResourceAttributesTrackingOptions) Get() *FlowActionResponseObjectResourceAttributesTrackingOptions {
	return v.value
}

func (v *NullableFlowActionResponseObjectResourceAttributesTrackingOptions) Set(val *FlowActionResponseObjectResourceAttributesTrackingOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowActionResponseObjectResourceAttributesTrackingOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowActionResponseObjectResourceAttributesTrackingOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowActionResponseObjectResourceAttributesTrackingOptions(val *FlowActionResponseObjectResourceAttributesTrackingOptions) *NullableFlowActionResponseObjectResourceAttributesTrackingOptions {
	return &NullableFlowActionResponseObjectResourceAttributesTrackingOptions{value: val, isSet: true}
}

func (v NullableFlowActionResponseObjectResourceAttributesTrackingOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowActionResponseObjectResourceAttributesTrackingOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


