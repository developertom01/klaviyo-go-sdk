/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostCatalogCategoryDeleteJobResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostCatalogCategoryDeleteJobResponse{}

// PostCatalogCategoryDeleteJobResponse struct for PostCatalogCategoryDeleteJobResponse
type PostCatalogCategoryDeleteJobResponse struct {
	Data PostCatalogCategoryDeleteJobResponseData `json:"data"`
}

type _PostCatalogCategoryDeleteJobResponse PostCatalogCategoryDeleteJobResponse

// NewPostCatalogCategoryDeleteJobResponse instantiates a new PostCatalogCategoryDeleteJobResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostCatalogCategoryDeleteJobResponse(data PostCatalogCategoryDeleteJobResponseData) *PostCatalogCategoryDeleteJobResponse {
	this := PostCatalogCategoryDeleteJobResponse{}
	this.Data = data
	return &this
}

// NewPostCatalogCategoryDeleteJobResponseWithDefaults instantiates a new PostCatalogCategoryDeleteJobResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostCatalogCategoryDeleteJobResponseWithDefaults() *PostCatalogCategoryDeleteJobResponse {
	this := PostCatalogCategoryDeleteJobResponse{}
	return &this
}

// GetData returns the Data field value
func (o *PostCatalogCategoryDeleteJobResponse) GetData() PostCatalogCategoryDeleteJobResponseData {
	if o == nil {
		var ret PostCatalogCategoryDeleteJobResponseData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *PostCatalogCategoryDeleteJobResponse) GetDataOk() (*PostCatalogCategoryDeleteJobResponseData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *PostCatalogCategoryDeleteJobResponse) SetData(v PostCatalogCategoryDeleteJobResponseData) {
	o.Data = v
}

func (o PostCatalogCategoryDeleteJobResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostCatalogCategoryDeleteJobResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

func (o *PostCatalogCategoryDeleteJobResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostCatalogCategoryDeleteJobResponse := _PostCatalogCategoryDeleteJobResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostCatalogCategoryDeleteJobResponse)

	if err != nil {
		return err
	}

	*o = PostCatalogCategoryDeleteJobResponse(varPostCatalogCategoryDeleteJobResponse)

	return err
}

type NullablePostCatalogCategoryDeleteJobResponse struct {
	value *PostCatalogCategoryDeleteJobResponse
	isSet bool
}

func (v NullablePostCatalogCategoryDeleteJobResponse) Get() *PostCatalogCategoryDeleteJobResponse {
	return v.value
}

func (v *NullablePostCatalogCategoryDeleteJobResponse) Set(val *PostCatalogCategoryDeleteJobResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePostCatalogCategoryDeleteJobResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePostCatalogCategoryDeleteJobResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostCatalogCategoryDeleteJobResponse(val *PostCatalogCategoryDeleteJobResponse) *NullablePostCatalogCategoryDeleteJobResponse {
	return &NullablePostCatalogCategoryDeleteJobResponse{value: val, isSet: true}
}

func (v NullablePostCatalogCategoryDeleteJobResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostCatalogCategoryDeleteJobResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


