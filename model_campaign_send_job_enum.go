/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
	"fmt"
)

// CampaignSendJobEnum the model 'CampaignSendJobEnum'
type CampaignSendJobEnum string

// List of CampaignSendJobEnum
const (
	CAMPAIGN_SEND_JOB CampaignSendJobEnum = "campaign-send-job"
)

// All allowed values of CampaignSendJobEnum enum
var AllowedCampaignSendJobEnumEnumValues = []CampaignSendJobEnum{
	"campaign-send-job",
}

func (v *CampaignSendJobEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CampaignSendJobEnum(value)
	for _, existing := range AllowedCampaignSendJobEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CampaignSendJobEnum", value)
}

// NewCampaignSendJobEnumFromValue returns a pointer to a valid CampaignSendJobEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCampaignSendJobEnumFromValue(v string) (*CampaignSendJobEnum, error) {
	ev := CampaignSendJobEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CampaignSendJobEnum: valid values are %v", v, AllowedCampaignSendJobEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CampaignSendJobEnum) IsValid() bool {
	for _, existing := range AllowedCampaignSendJobEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CampaignSendJobEnum value
func (v CampaignSendJobEnum) Ptr() *CampaignSendJobEnum {
	return &v
}

type NullableCampaignSendJobEnum struct {
	value *CampaignSendJobEnum
	isSet bool
}

func (v NullableCampaignSendJobEnum) Get() *CampaignSendJobEnum {
	return v.value
}

func (v *NullableCampaignSendJobEnum) Set(val *CampaignSendJobEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignSendJobEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignSendJobEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignSendJobEnum(val *CampaignSendJobEnum) *NullableCampaignSendJobEnum {
	return &NullableCampaignSendJobEnum{value: val, isSet: true}
}

func (v NullableCampaignSendJobEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignSendJobEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

