/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
)

// checks if the EmailTrackingOptionsSubObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailTrackingOptionsSubObject{}

// EmailTrackingOptionsSubObject struct for EmailTrackingOptionsSubObject
type EmailTrackingOptionsSubObject struct {
	// Whether the campaign needs UTM parameters. If set to False, UTM params will not be used.
	IsAddUtm NullableBool `json:"is_add_utm,omitempty"`
	// A list of UTM parameters. If an empty list is given and is_add_utm is True, uses company defaults.
	UtmParams []UTMParamsSubObject `json:"utm_params,omitempty"`
	// Whether the campaign is tracking click events. If not specified, uses company defaults.
	IsTrackingClicks NullableBool `json:"is_tracking_clicks,omitempty"`
	// Whether the campaign is tracking open events. If not specified, uses company defaults.
	IsTrackingOpens NullableBool `json:"is_tracking_opens,omitempty"`
}

// NewEmailTrackingOptionsSubObject instantiates a new EmailTrackingOptionsSubObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailTrackingOptionsSubObject() *EmailTrackingOptionsSubObject {
	this := EmailTrackingOptionsSubObject{}
	return &this
}

// NewEmailTrackingOptionsSubObjectWithDefaults instantiates a new EmailTrackingOptionsSubObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailTrackingOptionsSubObjectWithDefaults() *EmailTrackingOptionsSubObject {
	this := EmailTrackingOptionsSubObject{}
	return &this
}

// GetIsAddUtm returns the IsAddUtm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTrackingOptionsSubObject) GetIsAddUtm() bool {
	if o == nil || IsNil(o.IsAddUtm.Get()) {
		var ret bool
		return ret
	}
	return *o.IsAddUtm.Get()
}

// GetIsAddUtmOk returns a tuple with the IsAddUtm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTrackingOptionsSubObject) GetIsAddUtmOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsAddUtm.Get(), o.IsAddUtm.IsSet()
}

// HasIsAddUtm returns a boolean if a field has been set.
func (o *EmailTrackingOptionsSubObject) HasIsAddUtm() bool {
	if o != nil && o.IsAddUtm.IsSet() {
		return true
	}

	return false
}

// SetIsAddUtm gets a reference to the given NullableBool and assigns it to the IsAddUtm field.
func (o *EmailTrackingOptionsSubObject) SetIsAddUtm(v bool) {
	o.IsAddUtm.Set(&v)
}
// SetIsAddUtmNil sets the value for IsAddUtm to be an explicit nil
func (o *EmailTrackingOptionsSubObject) SetIsAddUtmNil() {
	o.IsAddUtm.Set(nil)
}

// UnsetIsAddUtm ensures that no value is present for IsAddUtm, not even an explicit nil
func (o *EmailTrackingOptionsSubObject) UnsetIsAddUtm() {
	o.IsAddUtm.Unset()
}

// GetUtmParams returns the UtmParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTrackingOptionsSubObject) GetUtmParams() []UTMParamsSubObject {
	if o == nil {
		var ret []UTMParamsSubObject
		return ret
	}
	return o.UtmParams
}

// GetUtmParamsOk returns a tuple with the UtmParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTrackingOptionsSubObject) GetUtmParamsOk() ([]UTMParamsSubObject, bool) {
	if o == nil || IsNil(o.UtmParams) {
		return nil, false
	}
	return o.UtmParams, true
}

// HasUtmParams returns a boolean if a field has been set.
func (o *EmailTrackingOptionsSubObject) HasUtmParams() bool {
	if o != nil && !IsNil(o.UtmParams) {
		return true
	}

	return false
}

// SetUtmParams gets a reference to the given []UTMParamsSubObject and assigns it to the UtmParams field.
func (o *EmailTrackingOptionsSubObject) SetUtmParams(v []UTMParamsSubObject) {
	o.UtmParams = v
}

// GetIsTrackingClicks returns the IsTrackingClicks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTrackingOptionsSubObject) GetIsTrackingClicks() bool {
	if o == nil || IsNil(o.IsTrackingClicks.Get()) {
		var ret bool
		return ret
	}
	return *o.IsTrackingClicks.Get()
}

// GetIsTrackingClicksOk returns a tuple with the IsTrackingClicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTrackingOptionsSubObject) GetIsTrackingClicksOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsTrackingClicks.Get(), o.IsTrackingClicks.IsSet()
}

// HasIsTrackingClicks returns a boolean if a field has been set.
func (o *EmailTrackingOptionsSubObject) HasIsTrackingClicks() bool {
	if o != nil && o.IsTrackingClicks.IsSet() {
		return true
	}

	return false
}

// SetIsTrackingClicks gets a reference to the given NullableBool and assigns it to the IsTrackingClicks field.
func (o *EmailTrackingOptionsSubObject) SetIsTrackingClicks(v bool) {
	o.IsTrackingClicks.Set(&v)
}
// SetIsTrackingClicksNil sets the value for IsTrackingClicks to be an explicit nil
func (o *EmailTrackingOptionsSubObject) SetIsTrackingClicksNil() {
	o.IsTrackingClicks.Set(nil)
}

// UnsetIsTrackingClicks ensures that no value is present for IsTrackingClicks, not even an explicit nil
func (o *EmailTrackingOptionsSubObject) UnsetIsTrackingClicks() {
	o.IsTrackingClicks.Unset()
}

// GetIsTrackingOpens returns the IsTrackingOpens field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTrackingOptionsSubObject) GetIsTrackingOpens() bool {
	if o == nil || IsNil(o.IsTrackingOpens.Get()) {
		var ret bool
		return ret
	}
	return *o.IsTrackingOpens.Get()
}

// GetIsTrackingOpensOk returns a tuple with the IsTrackingOpens field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTrackingOptionsSubObject) GetIsTrackingOpensOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsTrackingOpens.Get(), o.IsTrackingOpens.IsSet()
}

// HasIsTrackingOpens returns a boolean if a field has been set.
func (o *EmailTrackingOptionsSubObject) HasIsTrackingOpens() bool {
	if o != nil && o.IsTrackingOpens.IsSet() {
		return true
	}

	return false
}

// SetIsTrackingOpens gets a reference to the given NullableBool and assigns it to the IsTrackingOpens field.
func (o *EmailTrackingOptionsSubObject) SetIsTrackingOpens(v bool) {
	o.IsTrackingOpens.Set(&v)
}
// SetIsTrackingOpensNil sets the value for IsTrackingOpens to be an explicit nil
func (o *EmailTrackingOptionsSubObject) SetIsTrackingOpensNil() {
	o.IsTrackingOpens.Set(nil)
}

// UnsetIsTrackingOpens ensures that no value is present for IsTrackingOpens, not even an explicit nil
func (o *EmailTrackingOptionsSubObject) UnsetIsTrackingOpens() {
	o.IsTrackingOpens.Unset()
}

func (o EmailTrackingOptionsSubObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailTrackingOptionsSubObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.IsAddUtm.IsSet() {
		toSerialize["is_add_utm"] = o.IsAddUtm.Get()
	}
	if o.UtmParams != nil {
		toSerialize["utm_params"] = o.UtmParams
	}
	if o.IsTrackingClicks.IsSet() {
		toSerialize["is_tracking_clicks"] = o.IsTrackingClicks.Get()
	}
	if o.IsTrackingOpens.IsSet() {
		toSerialize["is_tracking_opens"] = o.IsTrackingOpens.Get()
	}
	return toSerialize, nil
}

type NullableEmailTrackingOptionsSubObject struct {
	value *EmailTrackingOptionsSubObject
	isSet bool
}

func (v NullableEmailTrackingOptionsSubObject) Get() *EmailTrackingOptionsSubObject {
	return v.value
}

func (v *NullableEmailTrackingOptionsSubObject) Set(val *EmailTrackingOptionsSubObject) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailTrackingOptionsSubObject) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailTrackingOptionsSubObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailTrackingOptionsSubObject(val *EmailTrackingOptionsSubObject) *NullableEmailTrackingOptionsSubObject {
	return &NullableEmailTrackingOptionsSubObject{value: val, isSet: true}
}

func (v NullableEmailTrackingOptionsSubObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailTrackingOptionsSubObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


