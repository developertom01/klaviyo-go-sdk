/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
)

// checks if the CatalogVariantUpdateQueryResourceObjectAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogVariantUpdateQueryResourceObjectAttributes{}

// CatalogVariantUpdateQueryResourceObjectAttributes struct for CatalogVariantUpdateQueryResourceObjectAttributes
type CatalogVariantUpdateQueryResourceObjectAttributes struct {
	// The title of the catalog item variant.
	Title NullableString `json:"title,omitempty"`
	// A description of the catalog item variant.
	Description NullableString `json:"description,omitempty"`
	// The SKU of the catalog item variant.
	Sku NullableString `json:"sku,omitempty"`
	// This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values: `1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock. `0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.
	InventoryPolicy NullableInt32 `json:"inventory_policy,omitempty"`
	// The quantity of the catalog item variant currently in stock.
	InventoryQuantity NullableFloat32 `json:"inventory_quantity,omitempty"`
	// This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).
	Price NullableFloat32 `json:"price,omitempty"`
	// URL pointing to the location of the catalog item variant on your website.
	Url NullableString `json:"url,omitempty"`
	// URL pointing to the location of a full image of the catalog item variant.
	ImageFullUrl NullableString `json:"image_full_url,omitempty"`
	// URL pointing to the location of an image thumbnail of the catalog item variant.
	ImageThumbnailUrl NullableString `json:"image_thumbnail_url,omitempty"`
	// List of URLs pointing to the locations of images of the catalog item variant.
	Images []string `json:"images,omitempty"`
	// Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.
	CustomMetadata map[string]interface{} `json:"custom_metadata,omitempty"`
	// Boolean value indicating whether the catalog item variant is published.
	Published NullableBool `json:"published,omitempty"`
}

// NewCatalogVariantUpdateQueryResourceObjectAttributes instantiates a new CatalogVariantUpdateQueryResourceObjectAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogVariantUpdateQueryResourceObjectAttributes() *CatalogVariantUpdateQueryResourceObjectAttributes {
	this := CatalogVariantUpdateQueryResourceObjectAttributes{}
	return &this
}

// NewCatalogVariantUpdateQueryResourceObjectAttributesWithDefaults instantiates a new CatalogVariantUpdateQueryResourceObjectAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogVariantUpdateQueryResourceObjectAttributesWithDefaults() *CatalogVariantUpdateQueryResourceObjectAttributes {
	this := CatalogVariantUpdateQueryResourceObjectAttributes{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) UnsetTitle() {
	o.Title.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) UnsetDescription() {
	o.Description.Unset()
}

// GetSku returns the Sku field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetSku() string {
	if o == nil || IsNil(o.Sku.Get()) {
		var ret string
		return ret
	}
	return *o.Sku.Get()
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sku.Get(), o.Sku.IsSet()
}

// HasSku returns a boolean if a field has been set.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) HasSku() bool {
	if o != nil && o.Sku.IsSet() {
		return true
	}

	return false
}

// SetSku gets a reference to the given NullableString and assigns it to the Sku field.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetSku(v string) {
	o.Sku.Set(&v)
}
// SetSkuNil sets the value for Sku to be an explicit nil
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetSkuNil() {
	o.Sku.Set(nil)
}

// UnsetSku ensures that no value is present for Sku, not even an explicit nil
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) UnsetSku() {
	o.Sku.Unset()
}

// GetInventoryPolicy returns the InventoryPolicy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetInventoryPolicy() int32 {
	if o == nil || IsNil(o.InventoryPolicy.Get()) {
		var ret int32
		return ret
	}
	return *o.InventoryPolicy.Get()
}

// GetInventoryPolicyOk returns a tuple with the InventoryPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetInventoryPolicyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.InventoryPolicy.Get(), o.InventoryPolicy.IsSet()
}

// HasInventoryPolicy returns a boolean if a field has been set.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) HasInventoryPolicy() bool {
	if o != nil && o.InventoryPolicy.IsSet() {
		return true
	}

	return false
}

// SetInventoryPolicy gets a reference to the given NullableInt32 and assigns it to the InventoryPolicy field.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetInventoryPolicy(v int32) {
	o.InventoryPolicy.Set(&v)
}
// SetInventoryPolicyNil sets the value for InventoryPolicy to be an explicit nil
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetInventoryPolicyNil() {
	o.InventoryPolicy.Set(nil)
}

// UnsetInventoryPolicy ensures that no value is present for InventoryPolicy, not even an explicit nil
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) UnsetInventoryPolicy() {
	o.InventoryPolicy.Unset()
}

// GetInventoryQuantity returns the InventoryQuantity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetInventoryQuantity() float32 {
	if o == nil || IsNil(o.InventoryQuantity.Get()) {
		var ret float32
		return ret
	}
	return *o.InventoryQuantity.Get()
}

// GetInventoryQuantityOk returns a tuple with the InventoryQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetInventoryQuantityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.InventoryQuantity.Get(), o.InventoryQuantity.IsSet()
}

// HasInventoryQuantity returns a boolean if a field has been set.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) HasInventoryQuantity() bool {
	if o != nil && o.InventoryQuantity.IsSet() {
		return true
	}

	return false
}

// SetInventoryQuantity gets a reference to the given NullableFloat32 and assigns it to the InventoryQuantity field.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetInventoryQuantity(v float32) {
	o.InventoryQuantity.Set(&v)
}
// SetInventoryQuantityNil sets the value for InventoryQuantity to be an explicit nil
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetInventoryQuantityNil() {
	o.InventoryQuantity.Set(nil)
}

// UnsetInventoryQuantity ensures that no value is present for InventoryQuantity, not even an explicit nil
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) UnsetInventoryQuantity() {
	o.InventoryQuantity.Unset()
}

// GetPrice returns the Price field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetPrice() float32 {
	if o == nil || IsNil(o.Price.Get()) {
		var ret float32
		return ret
	}
	return *o.Price.Get()
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Price.Get(), o.Price.IsSet()
}

// HasPrice returns a boolean if a field has been set.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) HasPrice() bool {
	if o != nil && o.Price.IsSet() {
		return true
	}

	return false
}

// SetPrice gets a reference to the given NullableFloat32 and assigns it to the Price field.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetPrice(v float32) {
	o.Price.Set(&v)
}
// SetPriceNil sets the value for Price to be an explicit nil
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetPriceNil() {
	o.Price.Set(nil)
}

// UnsetPrice ensures that no value is present for Price, not even an explicit nil
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) UnsetPrice() {
	o.Price.Unset()
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) UnsetUrl() {
	o.Url.Unset()
}

// GetImageFullUrl returns the ImageFullUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetImageFullUrl() string {
	if o == nil || IsNil(o.ImageFullUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ImageFullUrl.Get()
}

// GetImageFullUrlOk returns a tuple with the ImageFullUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetImageFullUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageFullUrl.Get(), o.ImageFullUrl.IsSet()
}

// HasImageFullUrl returns a boolean if a field has been set.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) HasImageFullUrl() bool {
	if o != nil && o.ImageFullUrl.IsSet() {
		return true
	}

	return false
}

// SetImageFullUrl gets a reference to the given NullableString and assigns it to the ImageFullUrl field.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetImageFullUrl(v string) {
	o.ImageFullUrl.Set(&v)
}
// SetImageFullUrlNil sets the value for ImageFullUrl to be an explicit nil
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetImageFullUrlNil() {
	o.ImageFullUrl.Set(nil)
}

// UnsetImageFullUrl ensures that no value is present for ImageFullUrl, not even an explicit nil
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) UnsetImageFullUrl() {
	o.ImageFullUrl.Unset()
}

// GetImageThumbnailUrl returns the ImageThumbnailUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetImageThumbnailUrl() string {
	if o == nil || IsNil(o.ImageThumbnailUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ImageThumbnailUrl.Get()
}

// GetImageThumbnailUrlOk returns a tuple with the ImageThumbnailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetImageThumbnailUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageThumbnailUrl.Get(), o.ImageThumbnailUrl.IsSet()
}

// HasImageThumbnailUrl returns a boolean if a field has been set.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) HasImageThumbnailUrl() bool {
	if o != nil && o.ImageThumbnailUrl.IsSet() {
		return true
	}

	return false
}

// SetImageThumbnailUrl gets a reference to the given NullableString and assigns it to the ImageThumbnailUrl field.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetImageThumbnailUrl(v string) {
	o.ImageThumbnailUrl.Set(&v)
}
// SetImageThumbnailUrlNil sets the value for ImageThumbnailUrl to be an explicit nil
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetImageThumbnailUrlNil() {
	o.ImageThumbnailUrl.Set(nil)
}

// UnsetImageThumbnailUrl ensures that no value is present for ImageThumbnailUrl, not even an explicit nil
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) UnsetImageThumbnailUrl() {
	o.ImageThumbnailUrl.Unset()
}

// GetImages returns the Images field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetImages() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetImagesOk() ([]string, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []string and assigns it to the Images field.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetImages(v []string) {
	o.Images = v
}

// GetCustomMetadata returns the CustomMetadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetCustomMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomMetadata
}

// GetCustomMetadataOk returns a tuple with the CustomMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetCustomMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomMetadata) {
		return map[string]interface{}{}, false
	}
	return o.CustomMetadata, true
}

// HasCustomMetadata returns a boolean if a field has been set.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) HasCustomMetadata() bool {
	if o != nil && !IsNil(o.CustomMetadata) {
		return true
	}

	return false
}

// SetCustomMetadata gets a reference to the given map[string]interface{} and assigns it to the CustomMetadata field.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetCustomMetadata(v map[string]interface{}) {
	o.CustomMetadata = v
}

// GetPublished returns the Published field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetPublished() bool {
	if o == nil || IsNil(o.Published.Get()) {
		var ret bool
		return ret
	}
	return *o.Published.Get()
}

// GetPublishedOk returns a tuple with the Published field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) GetPublishedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Published.Get(), o.Published.IsSet()
}

// HasPublished returns a boolean if a field has been set.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) HasPublished() bool {
	if o != nil && o.Published.IsSet() {
		return true
	}

	return false
}

// SetPublished gets a reference to the given NullableBool and assigns it to the Published field.
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetPublished(v bool) {
	o.Published.Set(&v)
}
// SetPublishedNil sets the value for Published to be an explicit nil
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) SetPublishedNil() {
	o.Published.Set(nil)
}

// UnsetPublished ensures that no value is present for Published, not even an explicit nil
func (o *CatalogVariantUpdateQueryResourceObjectAttributes) UnsetPublished() {
	o.Published.Unset()
}

func (o CatalogVariantUpdateQueryResourceObjectAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogVariantUpdateQueryResourceObjectAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Sku.IsSet() {
		toSerialize["sku"] = o.Sku.Get()
	}
	if o.InventoryPolicy.IsSet() {
		toSerialize["inventory_policy"] = o.InventoryPolicy.Get()
	}
	if o.InventoryQuantity.IsSet() {
		toSerialize["inventory_quantity"] = o.InventoryQuantity.Get()
	}
	if o.Price.IsSet() {
		toSerialize["price"] = o.Price.Get()
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if o.ImageFullUrl.IsSet() {
		toSerialize["image_full_url"] = o.ImageFullUrl.Get()
	}
	if o.ImageThumbnailUrl.IsSet() {
		toSerialize["image_thumbnail_url"] = o.ImageThumbnailUrl.Get()
	}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	if o.CustomMetadata != nil {
		toSerialize["custom_metadata"] = o.CustomMetadata
	}
	if o.Published.IsSet() {
		toSerialize["published"] = o.Published.Get()
	}
	return toSerialize, nil
}

type NullableCatalogVariantUpdateQueryResourceObjectAttributes struct {
	value *CatalogVariantUpdateQueryResourceObjectAttributes
	isSet bool
}

func (v NullableCatalogVariantUpdateQueryResourceObjectAttributes) Get() *CatalogVariantUpdateQueryResourceObjectAttributes {
	return v.value
}

func (v *NullableCatalogVariantUpdateQueryResourceObjectAttributes) Set(val *CatalogVariantUpdateQueryResourceObjectAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogVariantUpdateQueryResourceObjectAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogVariantUpdateQueryResourceObjectAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogVariantUpdateQueryResourceObjectAttributes(val *CatalogVariantUpdateQueryResourceObjectAttributes) *NullableCatalogVariantUpdateQueryResourceObjectAttributes {
	return &NullableCatalogVariantUpdateQueryResourceObjectAttributes{value: val, isSet: true}
}

func (v NullableCatalogVariantUpdateQueryResourceObjectAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogVariantUpdateQueryResourceObjectAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


