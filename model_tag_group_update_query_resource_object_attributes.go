/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TagGroupUpdateQueryResourceObjectAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TagGroupUpdateQueryResourceObjectAttributes{}

// TagGroupUpdateQueryResourceObjectAttributes struct for TagGroupUpdateQueryResourceObjectAttributes
type TagGroupUpdateQueryResourceObjectAttributes struct {
	// The Tag Group name
	Name string `json:"name"`
	ReturnFields []string `json:"return_fields,omitempty"`
}

type _TagGroupUpdateQueryResourceObjectAttributes TagGroupUpdateQueryResourceObjectAttributes

// NewTagGroupUpdateQueryResourceObjectAttributes instantiates a new TagGroupUpdateQueryResourceObjectAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagGroupUpdateQueryResourceObjectAttributes(name string) *TagGroupUpdateQueryResourceObjectAttributes {
	this := TagGroupUpdateQueryResourceObjectAttributes{}
	this.Name = name
	return &this
}

// NewTagGroupUpdateQueryResourceObjectAttributesWithDefaults instantiates a new TagGroupUpdateQueryResourceObjectAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagGroupUpdateQueryResourceObjectAttributesWithDefaults() *TagGroupUpdateQueryResourceObjectAttributes {
	this := TagGroupUpdateQueryResourceObjectAttributes{}
	return &this
}

// GetName returns the Name field value
func (o *TagGroupUpdateQueryResourceObjectAttributes) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TagGroupUpdateQueryResourceObjectAttributes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TagGroupUpdateQueryResourceObjectAttributes) SetName(v string) {
	o.Name = v
}

// GetReturnFields returns the ReturnFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TagGroupUpdateQueryResourceObjectAttributes) GetReturnFields() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ReturnFields
}

// GetReturnFieldsOk returns a tuple with the ReturnFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TagGroupUpdateQueryResourceObjectAttributes) GetReturnFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.ReturnFields) {
		return nil, false
	}
	return o.ReturnFields, true
}

// HasReturnFields returns a boolean if a field has been set.
func (o *TagGroupUpdateQueryResourceObjectAttributes) HasReturnFields() bool {
	if o != nil && !IsNil(o.ReturnFields) {
		return true
	}

	return false
}

// SetReturnFields gets a reference to the given []string and assigns it to the ReturnFields field.
func (o *TagGroupUpdateQueryResourceObjectAttributes) SetReturnFields(v []string) {
	o.ReturnFields = v
}

func (o TagGroupUpdateQueryResourceObjectAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TagGroupUpdateQueryResourceObjectAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if o.ReturnFields != nil {
		toSerialize["return_fields"] = o.ReturnFields
	}
	return toSerialize, nil
}

func (o *TagGroupUpdateQueryResourceObjectAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTagGroupUpdateQueryResourceObjectAttributes := _TagGroupUpdateQueryResourceObjectAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTagGroupUpdateQueryResourceObjectAttributes)

	if err != nil {
		return err
	}

	*o = TagGroupUpdateQueryResourceObjectAttributes(varTagGroupUpdateQueryResourceObjectAttributes)

	return err
}

type NullableTagGroupUpdateQueryResourceObjectAttributes struct {
	value *TagGroupUpdateQueryResourceObjectAttributes
	isSet bool
}

func (v NullableTagGroupUpdateQueryResourceObjectAttributes) Get() *TagGroupUpdateQueryResourceObjectAttributes {
	return v.value
}

func (v *NullableTagGroupUpdateQueryResourceObjectAttributes) Set(val *TagGroupUpdateQueryResourceObjectAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableTagGroupUpdateQueryResourceObjectAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableTagGroupUpdateQueryResourceObjectAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagGroupUpdateQueryResourceObjectAttributes(val *TagGroupUpdateQueryResourceObjectAttributes) *NullableTagGroupUpdateQueryResourceObjectAttributes {
	return &NullableTagGroupUpdateQueryResourceObjectAttributes{value: val, isSet: true}
}

func (v NullableTagGroupUpdateQueryResourceObjectAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagGroupUpdateQueryResourceObjectAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


