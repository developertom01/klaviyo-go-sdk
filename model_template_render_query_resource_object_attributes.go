/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TemplateRenderQueryResourceObjectAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateRenderQueryResourceObjectAttributes{}

// TemplateRenderQueryResourceObjectAttributes struct for TemplateRenderQueryResourceObjectAttributes
type TemplateRenderQueryResourceObjectAttributes struct {
	// The context for the template render. This must be a JSON object which has values for any tags used in the template. See [this doc](https://help.klaviyo.com/hc/en-us/articles/4408802648731) for more details.
	Context map[string]interface{} `json:"context"`
}

type _TemplateRenderQueryResourceObjectAttributes TemplateRenderQueryResourceObjectAttributes

// NewTemplateRenderQueryResourceObjectAttributes instantiates a new TemplateRenderQueryResourceObjectAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateRenderQueryResourceObjectAttributes(context map[string]interface{}) *TemplateRenderQueryResourceObjectAttributes {
	this := TemplateRenderQueryResourceObjectAttributes{}
	this.Context = context
	return &this
}

// NewTemplateRenderQueryResourceObjectAttributesWithDefaults instantiates a new TemplateRenderQueryResourceObjectAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateRenderQueryResourceObjectAttributesWithDefaults() *TemplateRenderQueryResourceObjectAttributes {
	this := TemplateRenderQueryResourceObjectAttributes{}
	return &this
}

// GetContext returns the Context field value
func (o *TemplateRenderQueryResourceObjectAttributes) GetContext() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Context
}

// GetContextOk returns a tuple with the Context field value
// and a boolean to check if the value has been set.
func (o *TemplateRenderQueryResourceObjectAttributes) GetContextOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Context, true
}

// SetContext sets field value
func (o *TemplateRenderQueryResourceObjectAttributes) SetContext(v map[string]interface{}) {
	o.Context = v
}

func (o TemplateRenderQueryResourceObjectAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateRenderQueryResourceObjectAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["context"] = o.Context
	return toSerialize, nil
}

func (o *TemplateRenderQueryResourceObjectAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"context",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTemplateRenderQueryResourceObjectAttributes := _TemplateRenderQueryResourceObjectAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTemplateRenderQueryResourceObjectAttributes)

	if err != nil {
		return err
	}

	*o = TemplateRenderQueryResourceObjectAttributes(varTemplateRenderQueryResourceObjectAttributes)

	return err
}

type NullableTemplateRenderQueryResourceObjectAttributes struct {
	value *TemplateRenderQueryResourceObjectAttributes
	isSet bool
}

func (v NullableTemplateRenderQueryResourceObjectAttributes) Get() *TemplateRenderQueryResourceObjectAttributes {
	return v.value
}

func (v *NullableTemplateRenderQueryResourceObjectAttributes) Set(val *TemplateRenderQueryResourceObjectAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateRenderQueryResourceObjectAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateRenderQueryResourceObjectAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateRenderQueryResourceObjectAttributes(val *TemplateRenderQueryResourceObjectAttributes) *NullableTemplateRenderQueryResourceObjectAttributes {
	return &NullableTemplateRenderQueryResourceObjectAttributes{value: val, isSet: true}
}

func (v NullableTemplateRenderQueryResourceObjectAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateRenderQueryResourceObjectAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


