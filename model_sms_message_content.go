/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SMSMessageContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SMSMessageContent{}

// SMSMessageContent struct for SMSMessageContent
type SMSMessageContent struct {
	Body string `json:"body"`
	MediaUrl NullableString `json:"media_url,omitempty"`
}

type _SMSMessageContent SMSMessageContent

// NewSMSMessageContent instantiates a new SMSMessageContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSMSMessageContent(body string) *SMSMessageContent {
	this := SMSMessageContent{}
	this.Body = body
	return &this
}

// NewSMSMessageContentWithDefaults instantiates a new SMSMessageContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSMSMessageContentWithDefaults() *SMSMessageContent {
	this := SMSMessageContent{}
	return &this
}

// GetBody returns the Body field value
func (o *SMSMessageContent) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *SMSMessageContent) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *SMSMessageContent) SetBody(v string) {
	o.Body = v
}

// GetMediaUrl returns the MediaUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SMSMessageContent) GetMediaUrl() string {
	if o == nil || IsNil(o.MediaUrl.Get()) {
		var ret string
		return ret
	}
	return *o.MediaUrl.Get()
}

// GetMediaUrlOk returns a tuple with the MediaUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SMSMessageContent) GetMediaUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MediaUrl.Get(), o.MediaUrl.IsSet()
}

// HasMediaUrl returns a boolean if a field has been set.
func (o *SMSMessageContent) HasMediaUrl() bool {
	if o != nil && o.MediaUrl.IsSet() {
		return true
	}

	return false
}

// SetMediaUrl gets a reference to the given NullableString and assigns it to the MediaUrl field.
func (o *SMSMessageContent) SetMediaUrl(v string) {
	o.MediaUrl.Set(&v)
}
// SetMediaUrlNil sets the value for MediaUrl to be an explicit nil
func (o *SMSMessageContent) SetMediaUrlNil() {
	o.MediaUrl.Set(nil)
}

// UnsetMediaUrl ensures that no value is present for MediaUrl, not even an explicit nil
func (o *SMSMessageContent) UnsetMediaUrl() {
	o.MediaUrl.Unset()
}

func (o SMSMessageContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SMSMessageContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["body"] = o.Body
	if o.MediaUrl.IsSet() {
		toSerialize["media_url"] = o.MediaUrl.Get()
	}
	return toSerialize, nil
}

func (o *SMSMessageContent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"body",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSMSMessageContent := _SMSMessageContent{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSMSMessageContent)

	if err != nil {
		return err
	}

	*o = SMSMessageContent(varSMSMessageContent)

	return err
}

type NullableSMSMessageContent struct {
	value *SMSMessageContent
	isSet bool
}

func (v NullableSMSMessageContent) Get() *SMSMessageContent {
	return v.value
}

func (v *NullableSMSMessageContent) Set(val *SMSMessageContent) {
	v.value = val
	v.isSet = true
}

func (v NullableSMSMessageContent) IsSet() bool {
	return v.isSet
}

func (v *NullableSMSMessageContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSMSMessageContent(val *SMSMessageContent) *NullableSMSMessageContent {
	return &NullableSMSMessageContent{value: val, isSet: true}
}

func (v NullableSMSMessageContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSMSMessageContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


