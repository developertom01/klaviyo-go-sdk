/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the PostFlowSeriesResponseDTODataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostFlowSeriesResponseDTODataAttributes{}

// PostFlowSeriesResponseDTODataAttributes struct for PostFlowSeriesResponseDTODataAttributes
type PostFlowSeriesResponseDTODataAttributes struct {
	// An array of all the returned values data. Each object in the array represents one unique grouping and the results for that grouping. Each value in the results array corresponds to the date time at the same index.
	Results []SeriesData `json:"results"`
	// An array of date times which correspond to the equivalent index in the results data.
	DateTimes []time.Time `json:"date_times"`
}

type _PostFlowSeriesResponseDTODataAttributes PostFlowSeriesResponseDTODataAttributes

// NewPostFlowSeriesResponseDTODataAttributes instantiates a new PostFlowSeriesResponseDTODataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostFlowSeriesResponseDTODataAttributes(results []SeriesData, dateTimes []time.Time) *PostFlowSeriesResponseDTODataAttributes {
	this := PostFlowSeriesResponseDTODataAttributes{}
	this.Results = results
	this.DateTimes = dateTimes
	return &this
}

// NewPostFlowSeriesResponseDTODataAttributesWithDefaults instantiates a new PostFlowSeriesResponseDTODataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostFlowSeriesResponseDTODataAttributesWithDefaults() *PostFlowSeriesResponseDTODataAttributes {
	this := PostFlowSeriesResponseDTODataAttributes{}
	return &this
}

// GetResults returns the Results field value
func (o *PostFlowSeriesResponseDTODataAttributes) GetResults() []SeriesData {
	if o == nil {
		var ret []SeriesData
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *PostFlowSeriesResponseDTODataAttributes) GetResultsOk() ([]SeriesData, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *PostFlowSeriesResponseDTODataAttributes) SetResults(v []SeriesData) {
	o.Results = v
}

// GetDateTimes returns the DateTimes field value
func (o *PostFlowSeriesResponseDTODataAttributes) GetDateTimes() []time.Time {
	if o == nil {
		var ret []time.Time
		return ret
	}

	return o.DateTimes
}

// GetDateTimesOk returns a tuple with the DateTimes field value
// and a boolean to check if the value has been set.
func (o *PostFlowSeriesResponseDTODataAttributes) GetDateTimesOk() ([]time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateTimes, true
}

// SetDateTimes sets field value
func (o *PostFlowSeriesResponseDTODataAttributes) SetDateTimes(v []time.Time) {
	o.DateTimes = v
}

func (o PostFlowSeriesResponseDTODataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostFlowSeriesResponseDTODataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["results"] = o.Results
	toSerialize["date_times"] = o.DateTimes
	return toSerialize, nil
}

func (o *PostFlowSeriesResponseDTODataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"results",
		"date_times",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostFlowSeriesResponseDTODataAttributes := _PostFlowSeriesResponseDTODataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostFlowSeriesResponseDTODataAttributes)

	if err != nil {
		return err
	}

	*o = PostFlowSeriesResponseDTODataAttributes(varPostFlowSeriesResponseDTODataAttributes)

	return err
}

type NullablePostFlowSeriesResponseDTODataAttributes struct {
	value *PostFlowSeriesResponseDTODataAttributes
	isSet bool
}

func (v NullablePostFlowSeriesResponseDTODataAttributes) Get() *PostFlowSeriesResponseDTODataAttributes {
	return v.value
}

func (v *NullablePostFlowSeriesResponseDTODataAttributes) Set(val *PostFlowSeriesResponseDTODataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePostFlowSeriesResponseDTODataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePostFlowSeriesResponseDTODataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostFlowSeriesResponseDTODataAttributes(val *PostFlowSeriesResponseDTODataAttributes) *NullablePostFlowSeriesResponseDTODataAttributes {
	return &NullablePostFlowSeriesResponseDTODataAttributes{value: val, isSet: true}
}

func (v NullablePostFlowSeriesResponseDTODataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostFlowSeriesResponseDTODataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


