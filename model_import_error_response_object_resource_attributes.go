/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ImportErrorResponseObjectResourceAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImportErrorResponseObjectResourceAttributes{}

// ImportErrorResponseObjectResourceAttributes struct for ImportErrorResponseObjectResourceAttributes
type ImportErrorResponseObjectResourceAttributes struct {
	// A code for classifying the error type.
	Code string `json:"code"`
	// A high-level message about the error.
	Title string `json:"title"`
	// Specific details about the error.
	Detail string `json:"detail"`
	Source ErrorSource `json:"source"`
	OriginalPayload map[string]interface{} `json:"original_payload,omitempty"`
}

type _ImportErrorResponseObjectResourceAttributes ImportErrorResponseObjectResourceAttributes

// NewImportErrorResponseObjectResourceAttributes instantiates a new ImportErrorResponseObjectResourceAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportErrorResponseObjectResourceAttributes(code string, title string, detail string, source ErrorSource) *ImportErrorResponseObjectResourceAttributes {
	this := ImportErrorResponseObjectResourceAttributes{}
	this.Code = code
	this.Title = title
	this.Detail = detail
	this.Source = source
	return &this
}

// NewImportErrorResponseObjectResourceAttributesWithDefaults instantiates a new ImportErrorResponseObjectResourceAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportErrorResponseObjectResourceAttributesWithDefaults() *ImportErrorResponseObjectResourceAttributes {
	this := ImportErrorResponseObjectResourceAttributes{}
	return &this
}

// GetCode returns the Code field value
func (o *ImportErrorResponseObjectResourceAttributes) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *ImportErrorResponseObjectResourceAttributes) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *ImportErrorResponseObjectResourceAttributes) SetCode(v string) {
	o.Code = v
}

// GetTitle returns the Title field value
func (o *ImportErrorResponseObjectResourceAttributes) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ImportErrorResponseObjectResourceAttributes) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ImportErrorResponseObjectResourceAttributes) SetTitle(v string) {
	o.Title = v
}

// GetDetail returns the Detail field value
func (o *ImportErrorResponseObjectResourceAttributes) GetDetail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Detail
}

// GetDetailOk returns a tuple with the Detail field value
// and a boolean to check if the value has been set.
func (o *ImportErrorResponseObjectResourceAttributes) GetDetailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Detail, true
}

// SetDetail sets field value
func (o *ImportErrorResponseObjectResourceAttributes) SetDetail(v string) {
	o.Detail = v
}

// GetSource returns the Source field value
func (o *ImportErrorResponseObjectResourceAttributes) GetSource() ErrorSource {
	if o == nil {
		var ret ErrorSource
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *ImportErrorResponseObjectResourceAttributes) GetSourceOk() (*ErrorSource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *ImportErrorResponseObjectResourceAttributes) SetSource(v ErrorSource) {
	o.Source = v
}

// GetOriginalPayload returns the OriginalPayload field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImportErrorResponseObjectResourceAttributes) GetOriginalPayload() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.OriginalPayload
}

// GetOriginalPayloadOk returns a tuple with the OriginalPayload field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImportErrorResponseObjectResourceAttributes) GetOriginalPayloadOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.OriginalPayload) {
		return map[string]interface{}{}, false
	}
	return o.OriginalPayload, true
}

// HasOriginalPayload returns a boolean if a field has been set.
func (o *ImportErrorResponseObjectResourceAttributes) HasOriginalPayload() bool {
	if o != nil && !IsNil(o.OriginalPayload) {
		return true
	}

	return false
}

// SetOriginalPayload gets a reference to the given map[string]interface{} and assigns it to the OriginalPayload field.
func (o *ImportErrorResponseObjectResourceAttributes) SetOriginalPayload(v map[string]interface{}) {
	o.OriginalPayload = v
}

func (o ImportErrorResponseObjectResourceAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImportErrorResponseObjectResourceAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	toSerialize["title"] = o.Title
	toSerialize["detail"] = o.Detail
	toSerialize["source"] = o.Source
	if o.OriginalPayload != nil {
		toSerialize["original_payload"] = o.OriginalPayload
	}
	return toSerialize, nil
}

func (o *ImportErrorResponseObjectResourceAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"code",
		"title",
		"detail",
		"source",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varImportErrorResponseObjectResourceAttributes := _ImportErrorResponseObjectResourceAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varImportErrorResponseObjectResourceAttributes)

	if err != nil {
		return err
	}

	*o = ImportErrorResponseObjectResourceAttributes(varImportErrorResponseObjectResourceAttributes)

	return err
}

type NullableImportErrorResponseObjectResourceAttributes struct {
	value *ImportErrorResponseObjectResourceAttributes
	isSet bool
}

func (v NullableImportErrorResponseObjectResourceAttributes) Get() *ImportErrorResponseObjectResourceAttributes {
	return v.value
}

func (v *NullableImportErrorResponseObjectResourceAttributes) Set(val *ImportErrorResponseObjectResourceAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableImportErrorResponseObjectResourceAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableImportErrorResponseObjectResourceAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportErrorResponseObjectResourceAttributes(val *ImportErrorResponseObjectResourceAttributes) *NullableImportErrorResponseObjectResourceAttributes {
	return &NullableImportErrorResponseObjectResourceAttributes{value: val, isSet: true}
}

func (v NullableImportErrorResponseObjectResourceAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportErrorResponseObjectResourceAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


