/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
	"fmt"
)

// FlowMessageResponseObjectResourceAttributesContent - struct for FlowMessageResponseObjectResourceAttributesContent
type FlowMessageResponseObjectResourceAttributesContent struct {
	EmailMessageContent *EmailMessageContent
	SMSMessageContent *SMSMessageContent
}

// EmailMessageContentAsFlowMessageResponseObjectResourceAttributesContent is a convenience function that returns EmailMessageContent wrapped in FlowMessageResponseObjectResourceAttributesContent
func EmailMessageContentAsFlowMessageResponseObjectResourceAttributesContent(v *EmailMessageContent) FlowMessageResponseObjectResourceAttributesContent {
	return FlowMessageResponseObjectResourceAttributesContent{
		EmailMessageContent: v,
	}
}

// SMSMessageContentAsFlowMessageResponseObjectResourceAttributesContent is a convenience function that returns SMSMessageContent wrapped in FlowMessageResponseObjectResourceAttributesContent
func SMSMessageContentAsFlowMessageResponseObjectResourceAttributesContent(v *SMSMessageContent) FlowMessageResponseObjectResourceAttributesContent {
	return FlowMessageResponseObjectResourceAttributesContent{
		SMSMessageContent: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *FlowMessageResponseObjectResourceAttributesContent) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into EmailMessageContent
	err = newStrictDecoder(data).Decode(&dst.EmailMessageContent)
	if err == nil {
		jsonEmailMessageContent, _ := json.Marshal(dst.EmailMessageContent)
		if string(jsonEmailMessageContent) == "{}" { // empty struct
			dst.EmailMessageContent = nil
		} else {
			match++
		}
	} else {
		dst.EmailMessageContent = nil
	}

	// try to unmarshal data into SMSMessageContent
	err = newStrictDecoder(data).Decode(&dst.SMSMessageContent)
	if err == nil {
		jsonSMSMessageContent, _ := json.Marshal(dst.SMSMessageContent)
		if string(jsonSMSMessageContent) == "{}" { // empty struct
			dst.SMSMessageContent = nil
		} else {
			match++
		}
	} else {
		dst.SMSMessageContent = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.EmailMessageContent = nil
		dst.SMSMessageContent = nil

		return fmt.Errorf("data matches more than one schema in oneOf(FlowMessageResponseObjectResourceAttributesContent)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(FlowMessageResponseObjectResourceAttributesContent)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src FlowMessageResponseObjectResourceAttributesContent) MarshalJSON() ([]byte, error) {
	if src.EmailMessageContent != nil {
		return json.Marshal(&src.EmailMessageContent)
	}

	if src.SMSMessageContent != nil {
		return json.Marshal(&src.SMSMessageContent)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *FlowMessageResponseObjectResourceAttributesContent) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.EmailMessageContent != nil {
		return obj.EmailMessageContent
	}

	if obj.SMSMessageContent != nil {
		return obj.SMSMessageContent
	}

	// all schemas are nil
	return nil
}

type NullableFlowMessageResponseObjectResourceAttributesContent struct {
	value *FlowMessageResponseObjectResourceAttributesContent
	isSet bool
}

func (v NullableFlowMessageResponseObjectResourceAttributesContent) Get() *FlowMessageResponseObjectResourceAttributesContent {
	return v.value
}

func (v *NullableFlowMessageResponseObjectResourceAttributesContent) Set(val *FlowMessageResponseObjectResourceAttributesContent) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowMessageResponseObjectResourceAttributesContent) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowMessageResponseObjectResourceAttributesContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowMessageResponseObjectResourceAttributesContent(val *FlowMessageResponseObjectResourceAttributesContent) *NullableFlowMessageResponseObjectResourceAttributesContent {
	return &NullableFlowMessageResponseObjectResourceAttributesContent{value: val, isSet: true}
}

func (v NullableFlowMessageResponseObjectResourceAttributesContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowMessageResponseObjectResourceAttributesContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


