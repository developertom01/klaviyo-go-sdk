/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CollectionLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CollectionLinks{}

// CollectionLinks struct for CollectionLinks
type CollectionLinks struct {
	Self string `json:"self"`
	First *string `json:"first,omitempty"`
	Last *string `json:"last,omitempty"`
	Prev *string `json:"prev,omitempty"`
	Next *string `json:"next,omitempty"`
}

type _CollectionLinks CollectionLinks

// NewCollectionLinks instantiates a new CollectionLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionLinks(self string) *CollectionLinks {
	this := CollectionLinks{}
	this.Self = self
	return &this
}

// NewCollectionLinksWithDefaults instantiates a new CollectionLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionLinksWithDefaults() *CollectionLinks {
	this := CollectionLinks{}
	return &this
}

// GetSelf returns the Self field value
func (o *CollectionLinks) GetSelf() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Self
}

// GetSelfOk returns a tuple with the Self field value
// and a boolean to check if the value has been set.
func (o *CollectionLinks) GetSelfOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Self, true
}

// SetSelf sets field value
func (o *CollectionLinks) SetSelf(v string) {
	o.Self = v
}

// GetFirst returns the First field value if set, zero value otherwise.
func (o *CollectionLinks) GetFirst() string {
	if o == nil || IsNil(o.First) {
		var ret string
		return ret
	}
	return *o.First
}

// GetFirstOk returns a tuple with the First field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionLinks) GetFirstOk() (*string, bool) {
	if o == nil || IsNil(o.First) {
		return nil, false
	}
	return o.First, true
}

// HasFirst returns a boolean if a field has been set.
func (o *CollectionLinks) HasFirst() bool {
	if o != nil && !IsNil(o.First) {
		return true
	}

	return false
}

// SetFirst gets a reference to the given string and assigns it to the First field.
func (o *CollectionLinks) SetFirst(v string) {
	o.First = &v
}

// GetLast returns the Last field value if set, zero value otherwise.
func (o *CollectionLinks) GetLast() string {
	if o == nil || IsNil(o.Last) {
		var ret string
		return ret
	}
	return *o.Last
}

// GetLastOk returns a tuple with the Last field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionLinks) GetLastOk() (*string, bool) {
	if o == nil || IsNil(o.Last) {
		return nil, false
	}
	return o.Last, true
}

// HasLast returns a boolean if a field has been set.
func (o *CollectionLinks) HasLast() bool {
	if o != nil && !IsNil(o.Last) {
		return true
	}

	return false
}

// SetLast gets a reference to the given string and assigns it to the Last field.
func (o *CollectionLinks) SetLast(v string) {
	o.Last = &v
}

// GetPrev returns the Prev field value if set, zero value otherwise.
func (o *CollectionLinks) GetPrev() string {
	if o == nil || IsNil(o.Prev) {
		var ret string
		return ret
	}
	return *o.Prev
}

// GetPrevOk returns a tuple with the Prev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionLinks) GetPrevOk() (*string, bool) {
	if o == nil || IsNil(o.Prev) {
		return nil, false
	}
	return o.Prev, true
}

// HasPrev returns a boolean if a field has been set.
func (o *CollectionLinks) HasPrev() bool {
	if o != nil && !IsNil(o.Prev) {
		return true
	}

	return false
}

// SetPrev gets a reference to the given string and assigns it to the Prev field.
func (o *CollectionLinks) SetPrev(v string) {
	o.Prev = &v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *CollectionLinks) GetNext() string {
	if o == nil || IsNil(o.Next) {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionLinks) GetNextOk() (*string, bool) {
	if o == nil || IsNil(o.Next) {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *CollectionLinks) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *CollectionLinks) SetNext(v string) {
	o.Next = &v
}

func (o CollectionLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CollectionLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["self"] = o.Self
	if !IsNil(o.First) {
		toSerialize["first"] = o.First
	}
	if !IsNil(o.Last) {
		toSerialize["last"] = o.Last
	}
	if !IsNil(o.Prev) {
		toSerialize["prev"] = o.Prev
	}
	if !IsNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	return toSerialize, nil
}

func (o *CollectionLinks) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"self",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCollectionLinks := _CollectionLinks{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCollectionLinks)

	if err != nil {
		return err
	}

	*o = CollectionLinks(varCollectionLinks)

	return err
}

type NullableCollectionLinks struct {
	value *CollectionLinks
	isSet bool
}

func (v NullableCollectionLinks) Get() *CollectionLinks {
	return v.value
}

func (v *NullableCollectionLinks) Set(val *CollectionLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionLinks(val *CollectionLinks) *NullableCollectionLinks {
	return &NullableCollectionLinks{value: val, isSet: true}
}

func (v NullableCollectionLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


