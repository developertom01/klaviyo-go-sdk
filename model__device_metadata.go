/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
)

// checks if the DeviceMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeviceMetadata{}

// DeviceMetadata struct for DeviceMetadata
type DeviceMetadata struct {
	// Relatively stable ID for the device. Will update on app uninstall and reinstall
	DeviceId NullableString `json:"device_id,omitempty"`
	// The name of the SDK used to create the push token.
	KlaviyoSdk NullableString `json:"klaviyo_sdk,omitempty"`
	// The version of the SDK used to create the push token
	SdkVersion NullableString `json:"sdk_version,omitempty"`
	// The model of the device
	DeviceModel NullableString `json:"device_model,omitempty"`
	// The name of the operating system on the device.
	OsName NullableString `json:"os_name,omitempty"`
	// The version of the operating system on the device
	OsVersion NullableString `json:"os_version,omitempty"`
	// The manufacturer of the device
	Manufacturer NullableString `json:"manufacturer,omitempty"`
	// The name of the app that created the push token
	AppName NullableString `json:"app_name,omitempty"`
	// The version of the app that created the push token
	AppVersion NullableString `json:"app_version,omitempty"`
	// The build of the app that created the push token
	AppBuild NullableString `json:"app_build,omitempty"`
	// The ID of the app that created the push token
	AppId NullableString `json:"app_id,omitempty"`
	// The environment in which the push token was created
	Environment NullableString `json:"environment,omitempty"`
}

// NewDeviceMetadata instantiates a new DeviceMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceMetadata() *DeviceMetadata {
	this := DeviceMetadata{}
	return &this
}

// NewDeviceMetadataWithDefaults instantiates a new DeviceMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceMetadataWithDefaults() *DeviceMetadata {
	this := DeviceMetadata{}
	return &this
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceMetadata) GetDeviceId() string {
	if o == nil || IsNil(o.DeviceId.Get()) {
		var ret string
		return ret
	}
	return *o.DeviceId.Get()
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceMetadata) GetDeviceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceId.Get(), o.DeviceId.IsSet()
}

// HasDeviceId returns a boolean if a field has been set.
func (o *DeviceMetadata) HasDeviceId() bool {
	if o != nil && o.DeviceId.IsSet() {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given NullableString and assigns it to the DeviceId field.
func (o *DeviceMetadata) SetDeviceId(v string) {
	o.DeviceId.Set(&v)
}
// SetDeviceIdNil sets the value for DeviceId to be an explicit nil
func (o *DeviceMetadata) SetDeviceIdNil() {
	o.DeviceId.Set(nil)
}

// UnsetDeviceId ensures that no value is present for DeviceId, not even an explicit nil
func (o *DeviceMetadata) UnsetDeviceId() {
	o.DeviceId.Unset()
}

// GetKlaviyoSdk returns the KlaviyoSdk field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceMetadata) GetKlaviyoSdk() string {
	if o == nil || IsNil(o.KlaviyoSdk.Get()) {
		var ret string
		return ret
	}
	return *o.KlaviyoSdk.Get()
}

// GetKlaviyoSdkOk returns a tuple with the KlaviyoSdk field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceMetadata) GetKlaviyoSdkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KlaviyoSdk.Get(), o.KlaviyoSdk.IsSet()
}

// HasKlaviyoSdk returns a boolean if a field has been set.
func (o *DeviceMetadata) HasKlaviyoSdk() bool {
	if o != nil && o.KlaviyoSdk.IsSet() {
		return true
	}

	return false
}

// SetKlaviyoSdk gets a reference to the given NullableString and assigns it to the KlaviyoSdk field.
func (o *DeviceMetadata) SetKlaviyoSdk(v string) {
	o.KlaviyoSdk.Set(&v)
}
// SetKlaviyoSdkNil sets the value for KlaviyoSdk to be an explicit nil
func (o *DeviceMetadata) SetKlaviyoSdkNil() {
	o.KlaviyoSdk.Set(nil)
}

// UnsetKlaviyoSdk ensures that no value is present for KlaviyoSdk, not even an explicit nil
func (o *DeviceMetadata) UnsetKlaviyoSdk() {
	o.KlaviyoSdk.Unset()
}

// GetSdkVersion returns the SdkVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceMetadata) GetSdkVersion() string {
	if o == nil || IsNil(o.SdkVersion.Get()) {
		var ret string
		return ret
	}
	return *o.SdkVersion.Get()
}

// GetSdkVersionOk returns a tuple with the SdkVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceMetadata) GetSdkVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SdkVersion.Get(), o.SdkVersion.IsSet()
}

// HasSdkVersion returns a boolean if a field has been set.
func (o *DeviceMetadata) HasSdkVersion() bool {
	if o != nil && o.SdkVersion.IsSet() {
		return true
	}

	return false
}

// SetSdkVersion gets a reference to the given NullableString and assigns it to the SdkVersion field.
func (o *DeviceMetadata) SetSdkVersion(v string) {
	o.SdkVersion.Set(&v)
}
// SetSdkVersionNil sets the value for SdkVersion to be an explicit nil
func (o *DeviceMetadata) SetSdkVersionNil() {
	o.SdkVersion.Set(nil)
}

// UnsetSdkVersion ensures that no value is present for SdkVersion, not even an explicit nil
func (o *DeviceMetadata) UnsetSdkVersion() {
	o.SdkVersion.Unset()
}

// GetDeviceModel returns the DeviceModel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceMetadata) GetDeviceModel() string {
	if o == nil || IsNil(o.DeviceModel.Get()) {
		var ret string
		return ret
	}
	return *o.DeviceModel.Get()
}

// GetDeviceModelOk returns a tuple with the DeviceModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceMetadata) GetDeviceModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceModel.Get(), o.DeviceModel.IsSet()
}

// HasDeviceModel returns a boolean if a field has been set.
func (o *DeviceMetadata) HasDeviceModel() bool {
	if o != nil && o.DeviceModel.IsSet() {
		return true
	}

	return false
}

// SetDeviceModel gets a reference to the given NullableString and assigns it to the DeviceModel field.
func (o *DeviceMetadata) SetDeviceModel(v string) {
	o.DeviceModel.Set(&v)
}
// SetDeviceModelNil sets the value for DeviceModel to be an explicit nil
func (o *DeviceMetadata) SetDeviceModelNil() {
	o.DeviceModel.Set(nil)
}

// UnsetDeviceModel ensures that no value is present for DeviceModel, not even an explicit nil
func (o *DeviceMetadata) UnsetDeviceModel() {
	o.DeviceModel.Unset()
}

// GetOsName returns the OsName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceMetadata) GetOsName() string {
	if o == nil || IsNil(o.OsName.Get()) {
		var ret string
		return ret
	}
	return *o.OsName.Get()
}

// GetOsNameOk returns a tuple with the OsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceMetadata) GetOsNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OsName.Get(), o.OsName.IsSet()
}

// HasOsName returns a boolean if a field has been set.
func (o *DeviceMetadata) HasOsName() bool {
	if o != nil && o.OsName.IsSet() {
		return true
	}

	return false
}

// SetOsName gets a reference to the given NullableString and assigns it to the OsName field.
func (o *DeviceMetadata) SetOsName(v string) {
	o.OsName.Set(&v)
}
// SetOsNameNil sets the value for OsName to be an explicit nil
func (o *DeviceMetadata) SetOsNameNil() {
	o.OsName.Set(nil)
}

// UnsetOsName ensures that no value is present for OsName, not even an explicit nil
func (o *DeviceMetadata) UnsetOsName() {
	o.OsName.Unset()
}

// GetOsVersion returns the OsVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceMetadata) GetOsVersion() string {
	if o == nil || IsNil(o.OsVersion.Get()) {
		var ret string
		return ret
	}
	return *o.OsVersion.Get()
}

// GetOsVersionOk returns a tuple with the OsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceMetadata) GetOsVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OsVersion.Get(), o.OsVersion.IsSet()
}

// HasOsVersion returns a boolean if a field has been set.
func (o *DeviceMetadata) HasOsVersion() bool {
	if o != nil && o.OsVersion.IsSet() {
		return true
	}

	return false
}

// SetOsVersion gets a reference to the given NullableString and assigns it to the OsVersion field.
func (o *DeviceMetadata) SetOsVersion(v string) {
	o.OsVersion.Set(&v)
}
// SetOsVersionNil sets the value for OsVersion to be an explicit nil
func (o *DeviceMetadata) SetOsVersionNil() {
	o.OsVersion.Set(nil)
}

// UnsetOsVersion ensures that no value is present for OsVersion, not even an explicit nil
func (o *DeviceMetadata) UnsetOsVersion() {
	o.OsVersion.Unset()
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceMetadata) GetManufacturer() string {
	if o == nil || IsNil(o.Manufacturer.Get()) {
		var ret string
		return ret
	}
	return *o.Manufacturer.Get()
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceMetadata) GetManufacturerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Manufacturer.Get(), o.Manufacturer.IsSet()
}

// HasManufacturer returns a boolean if a field has been set.
func (o *DeviceMetadata) HasManufacturer() bool {
	if o != nil && o.Manufacturer.IsSet() {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given NullableString and assigns it to the Manufacturer field.
func (o *DeviceMetadata) SetManufacturer(v string) {
	o.Manufacturer.Set(&v)
}
// SetManufacturerNil sets the value for Manufacturer to be an explicit nil
func (o *DeviceMetadata) SetManufacturerNil() {
	o.Manufacturer.Set(nil)
}

// UnsetManufacturer ensures that no value is present for Manufacturer, not even an explicit nil
func (o *DeviceMetadata) UnsetManufacturer() {
	o.Manufacturer.Unset()
}

// GetAppName returns the AppName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceMetadata) GetAppName() string {
	if o == nil || IsNil(o.AppName.Get()) {
		var ret string
		return ret
	}
	return *o.AppName.Get()
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceMetadata) GetAppNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AppName.Get(), o.AppName.IsSet()
}

// HasAppName returns a boolean if a field has been set.
func (o *DeviceMetadata) HasAppName() bool {
	if o != nil && o.AppName.IsSet() {
		return true
	}

	return false
}

// SetAppName gets a reference to the given NullableString and assigns it to the AppName field.
func (o *DeviceMetadata) SetAppName(v string) {
	o.AppName.Set(&v)
}
// SetAppNameNil sets the value for AppName to be an explicit nil
func (o *DeviceMetadata) SetAppNameNil() {
	o.AppName.Set(nil)
}

// UnsetAppName ensures that no value is present for AppName, not even an explicit nil
func (o *DeviceMetadata) UnsetAppName() {
	o.AppName.Unset()
}

// GetAppVersion returns the AppVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceMetadata) GetAppVersion() string {
	if o == nil || IsNil(o.AppVersion.Get()) {
		var ret string
		return ret
	}
	return *o.AppVersion.Get()
}

// GetAppVersionOk returns a tuple with the AppVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceMetadata) GetAppVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AppVersion.Get(), o.AppVersion.IsSet()
}

// HasAppVersion returns a boolean if a field has been set.
func (o *DeviceMetadata) HasAppVersion() bool {
	if o != nil && o.AppVersion.IsSet() {
		return true
	}

	return false
}

// SetAppVersion gets a reference to the given NullableString and assigns it to the AppVersion field.
func (o *DeviceMetadata) SetAppVersion(v string) {
	o.AppVersion.Set(&v)
}
// SetAppVersionNil sets the value for AppVersion to be an explicit nil
func (o *DeviceMetadata) SetAppVersionNil() {
	o.AppVersion.Set(nil)
}

// UnsetAppVersion ensures that no value is present for AppVersion, not even an explicit nil
func (o *DeviceMetadata) UnsetAppVersion() {
	o.AppVersion.Unset()
}

// GetAppBuild returns the AppBuild field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceMetadata) GetAppBuild() string {
	if o == nil || IsNil(o.AppBuild.Get()) {
		var ret string
		return ret
	}
	return *o.AppBuild.Get()
}

// GetAppBuildOk returns a tuple with the AppBuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceMetadata) GetAppBuildOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AppBuild.Get(), o.AppBuild.IsSet()
}

// HasAppBuild returns a boolean if a field has been set.
func (o *DeviceMetadata) HasAppBuild() bool {
	if o != nil && o.AppBuild.IsSet() {
		return true
	}

	return false
}

// SetAppBuild gets a reference to the given NullableString and assigns it to the AppBuild field.
func (o *DeviceMetadata) SetAppBuild(v string) {
	o.AppBuild.Set(&v)
}
// SetAppBuildNil sets the value for AppBuild to be an explicit nil
func (o *DeviceMetadata) SetAppBuildNil() {
	o.AppBuild.Set(nil)
}

// UnsetAppBuild ensures that no value is present for AppBuild, not even an explicit nil
func (o *DeviceMetadata) UnsetAppBuild() {
	o.AppBuild.Unset()
}

// GetAppId returns the AppId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceMetadata) GetAppId() string {
	if o == nil || IsNil(o.AppId.Get()) {
		var ret string
		return ret
	}
	return *o.AppId.Get()
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceMetadata) GetAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AppId.Get(), o.AppId.IsSet()
}

// HasAppId returns a boolean if a field has been set.
func (o *DeviceMetadata) HasAppId() bool {
	if o != nil && o.AppId.IsSet() {
		return true
	}

	return false
}

// SetAppId gets a reference to the given NullableString and assigns it to the AppId field.
func (o *DeviceMetadata) SetAppId(v string) {
	o.AppId.Set(&v)
}
// SetAppIdNil sets the value for AppId to be an explicit nil
func (o *DeviceMetadata) SetAppIdNil() {
	o.AppId.Set(nil)
}

// UnsetAppId ensures that no value is present for AppId, not even an explicit nil
func (o *DeviceMetadata) UnsetAppId() {
	o.AppId.Unset()
}

// GetEnvironment returns the Environment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceMetadata) GetEnvironment() string {
	if o == nil || IsNil(o.Environment.Get()) {
		var ret string
		return ret
	}
	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceMetadata) GetEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// HasEnvironment returns a boolean if a field has been set.
func (o *DeviceMetadata) HasEnvironment() bool {
	if o != nil && o.Environment.IsSet() {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given NullableString and assigns it to the Environment field.
func (o *DeviceMetadata) SetEnvironment(v string) {
	o.Environment.Set(&v)
}
// SetEnvironmentNil sets the value for Environment to be an explicit nil
func (o *DeviceMetadata) SetEnvironmentNil() {
	o.Environment.Set(nil)
}

// UnsetEnvironment ensures that no value is present for Environment, not even an explicit nil
func (o *DeviceMetadata) UnsetEnvironment() {
	o.Environment.Unset()
}

func (o DeviceMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeviceMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceId.IsSet() {
		toSerialize["device_id"] = o.DeviceId.Get()
	}
	if o.KlaviyoSdk.IsSet() {
		toSerialize["klaviyo_sdk"] = o.KlaviyoSdk.Get()
	}
	if o.SdkVersion.IsSet() {
		toSerialize["sdk_version"] = o.SdkVersion.Get()
	}
	if o.DeviceModel.IsSet() {
		toSerialize["device_model"] = o.DeviceModel.Get()
	}
	if o.OsName.IsSet() {
		toSerialize["os_name"] = o.OsName.Get()
	}
	if o.OsVersion.IsSet() {
		toSerialize["os_version"] = o.OsVersion.Get()
	}
	if o.Manufacturer.IsSet() {
		toSerialize["manufacturer"] = o.Manufacturer.Get()
	}
	if o.AppName.IsSet() {
		toSerialize["app_name"] = o.AppName.Get()
	}
	if o.AppVersion.IsSet() {
		toSerialize["app_version"] = o.AppVersion.Get()
	}
	if o.AppBuild.IsSet() {
		toSerialize["app_build"] = o.AppBuild.Get()
	}
	if o.AppId.IsSet() {
		toSerialize["app_id"] = o.AppId.Get()
	}
	if o.Environment.IsSet() {
		toSerialize["environment"] = o.Environment.Get()
	}
	return toSerialize, nil
}

type NullableDeviceMetadata struct {
	value *DeviceMetadata
	isSet bool
}

func (v NullableDeviceMetadata) Get() *DeviceMetadata {
	return v.value
}

func (v *NullableDeviceMetadata) Set(val *DeviceMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceMetadata(val *DeviceMetadata) *NullableDeviceMetadata {
	return &NullableDeviceMetadata{value: val, isSet: true}
}

func (v NullableDeviceMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


