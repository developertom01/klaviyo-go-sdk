/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetCouponCodeResponseCompoundDocument type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCouponCodeResponseCompoundDocument{}

// GetCouponCodeResponseCompoundDocument struct for GetCouponCodeResponseCompoundDocument
type GetCouponCodeResponseCompoundDocument struct {
	Data GetCouponCodeResponseCollectionCompoundDocumentDataInner `json:"data"`
	Included []CouponResponseObjectResource `json:"included,omitempty"`
}

type _GetCouponCodeResponseCompoundDocument GetCouponCodeResponseCompoundDocument

// NewGetCouponCodeResponseCompoundDocument instantiates a new GetCouponCodeResponseCompoundDocument object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCouponCodeResponseCompoundDocument(data GetCouponCodeResponseCollectionCompoundDocumentDataInner) *GetCouponCodeResponseCompoundDocument {
	this := GetCouponCodeResponseCompoundDocument{}
	this.Data = data
	return &this
}

// NewGetCouponCodeResponseCompoundDocumentWithDefaults instantiates a new GetCouponCodeResponseCompoundDocument object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCouponCodeResponseCompoundDocumentWithDefaults() *GetCouponCodeResponseCompoundDocument {
	this := GetCouponCodeResponseCompoundDocument{}
	return &this
}

// GetData returns the Data field value
func (o *GetCouponCodeResponseCompoundDocument) GetData() GetCouponCodeResponseCollectionCompoundDocumentDataInner {
	if o == nil {
		var ret GetCouponCodeResponseCollectionCompoundDocumentDataInner
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *GetCouponCodeResponseCompoundDocument) GetDataOk() (*GetCouponCodeResponseCollectionCompoundDocumentDataInner, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *GetCouponCodeResponseCompoundDocument) SetData(v GetCouponCodeResponseCollectionCompoundDocumentDataInner) {
	o.Data = v
}

// GetIncluded returns the Included field value if set, zero value otherwise.
func (o *GetCouponCodeResponseCompoundDocument) GetIncluded() []CouponResponseObjectResource {
	if o == nil || IsNil(o.Included) {
		var ret []CouponResponseObjectResource
		return ret
	}
	return o.Included
}

// GetIncludedOk returns a tuple with the Included field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCouponCodeResponseCompoundDocument) GetIncludedOk() ([]CouponResponseObjectResource, bool) {
	if o == nil || IsNil(o.Included) {
		return nil, false
	}
	return o.Included, true
}

// HasIncluded returns a boolean if a field has been set.
func (o *GetCouponCodeResponseCompoundDocument) HasIncluded() bool {
	if o != nil && !IsNil(o.Included) {
		return true
	}

	return false
}

// SetIncluded gets a reference to the given []CouponResponseObjectResource and assigns it to the Included field.
func (o *GetCouponCodeResponseCompoundDocument) SetIncluded(v []CouponResponseObjectResource) {
	o.Included = v
}

func (o GetCouponCodeResponseCompoundDocument) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCouponCodeResponseCompoundDocument) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	if !IsNil(o.Included) {
		toSerialize["included"] = o.Included
	}
	return toSerialize, nil
}

func (o *GetCouponCodeResponseCompoundDocument) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetCouponCodeResponseCompoundDocument := _GetCouponCodeResponseCompoundDocument{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetCouponCodeResponseCompoundDocument)

	if err != nil {
		return err
	}

	*o = GetCouponCodeResponseCompoundDocument(varGetCouponCodeResponseCompoundDocument)

	return err
}

type NullableGetCouponCodeResponseCompoundDocument struct {
	value *GetCouponCodeResponseCompoundDocument
	isSet bool
}

func (v NullableGetCouponCodeResponseCompoundDocument) Get() *GetCouponCodeResponseCompoundDocument {
	return v.value
}

func (v *NullableGetCouponCodeResponseCompoundDocument) Set(val *GetCouponCodeResponseCompoundDocument) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCouponCodeResponseCompoundDocument) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCouponCodeResponseCompoundDocument) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCouponCodeResponseCompoundDocument(val *GetCouponCodeResponseCompoundDocument) *NullableGetCouponCodeResponseCompoundDocument {
	return &NullableGetCouponCodeResponseCompoundDocument{value: val, isSet: true}
}

func (v NullableGetCouponCodeResponseCompoundDocument) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCouponCodeResponseCompoundDocument) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


