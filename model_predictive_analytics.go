/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
	"time"
)

// checks if the PredictiveAnalytics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PredictiveAnalytics{}

// PredictiveAnalytics struct for PredictiveAnalytics
type PredictiveAnalytics struct {
	// Total value of all historically placed orders
	HistoricClv NullableFloat32 `json:"historic_clv,omitempty"`
	// Predicted value of all placed orders in the next 365 days
	PredictedClv NullableFloat32 `json:"predicted_clv,omitempty"`
	// Sum of historic and predicted CLV
	TotalClv NullableFloat32 `json:"total_clv,omitempty"`
	// Number of already placed orders
	HistoricNumberOfOrders NullableInt32 `json:"historic_number_of_orders,omitempty"`
	// Predicted number of placed orders in the next 365 days
	PredictedNumberOfOrders NullableFloat32 `json:"predicted_number_of_orders,omitempty"`
	// Average number of days between orders (None if only one order has been placed)
	AverageDaysBetweenOrders NullableFloat32 `json:"average_days_between_orders,omitempty"`
	// Average value of placed orders
	AverageOrderValue NullableFloat32 `json:"average_order_value,omitempty"`
	// Probability the customer has churned
	ChurnProbability NullableFloat32 `json:"churn_probability,omitempty"`
	// Expected date of next order, as calculated at the time of their most recent order
	ExpectedDateOfNextOrder NullableTime `json:"expected_date_of_next_order,omitempty"`
}

// NewPredictiveAnalytics instantiates a new PredictiveAnalytics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPredictiveAnalytics() *PredictiveAnalytics {
	this := PredictiveAnalytics{}
	return &this
}

// NewPredictiveAnalyticsWithDefaults instantiates a new PredictiveAnalytics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPredictiveAnalyticsWithDefaults() *PredictiveAnalytics {
	this := PredictiveAnalytics{}
	return &this
}

// GetHistoricClv returns the HistoricClv field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PredictiveAnalytics) GetHistoricClv() float32 {
	if o == nil || IsNil(o.HistoricClv.Get()) {
		var ret float32
		return ret
	}
	return *o.HistoricClv.Get()
}

// GetHistoricClvOk returns a tuple with the HistoricClv field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PredictiveAnalytics) GetHistoricClvOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.HistoricClv.Get(), o.HistoricClv.IsSet()
}

// HasHistoricClv returns a boolean if a field has been set.
func (o *PredictiveAnalytics) HasHistoricClv() bool {
	if o != nil && o.HistoricClv.IsSet() {
		return true
	}

	return false
}

// SetHistoricClv gets a reference to the given NullableFloat32 and assigns it to the HistoricClv field.
func (o *PredictiveAnalytics) SetHistoricClv(v float32) {
	o.HistoricClv.Set(&v)
}
// SetHistoricClvNil sets the value for HistoricClv to be an explicit nil
func (o *PredictiveAnalytics) SetHistoricClvNil() {
	o.HistoricClv.Set(nil)
}

// UnsetHistoricClv ensures that no value is present for HistoricClv, not even an explicit nil
func (o *PredictiveAnalytics) UnsetHistoricClv() {
	o.HistoricClv.Unset()
}

// GetPredictedClv returns the PredictedClv field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PredictiveAnalytics) GetPredictedClv() float32 {
	if o == nil || IsNil(o.PredictedClv.Get()) {
		var ret float32
		return ret
	}
	return *o.PredictedClv.Get()
}

// GetPredictedClvOk returns a tuple with the PredictedClv field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PredictiveAnalytics) GetPredictedClvOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PredictedClv.Get(), o.PredictedClv.IsSet()
}

// HasPredictedClv returns a boolean if a field has been set.
func (o *PredictiveAnalytics) HasPredictedClv() bool {
	if o != nil && o.PredictedClv.IsSet() {
		return true
	}

	return false
}

// SetPredictedClv gets a reference to the given NullableFloat32 and assigns it to the PredictedClv field.
func (o *PredictiveAnalytics) SetPredictedClv(v float32) {
	o.PredictedClv.Set(&v)
}
// SetPredictedClvNil sets the value for PredictedClv to be an explicit nil
func (o *PredictiveAnalytics) SetPredictedClvNil() {
	o.PredictedClv.Set(nil)
}

// UnsetPredictedClv ensures that no value is present for PredictedClv, not even an explicit nil
func (o *PredictiveAnalytics) UnsetPredictedClv() {
	o.PredictedClv.Unset()
}

// GetTotalClv returns the TotalClv field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PredictiveAnalytics) GetTotalClv() float32 {
	if o == nil || IsNil(o.TotalClv.Get()) {
		var ret float32
		return ret
	}
	return *o.TotalClv.Get()
}

// GetTotalClvOk returns a tuple with the TotalClv field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PredictiveAnalytics) GetTotalClvOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalClv.Get(), o.TotalClv.IsSet()
}

// HasTotalClv returns a boolean if a field has been set.
func (o *PredictiveAnalytics) HasTotalClv() bool {
	if o != nil && o.TotalClv.IsSet() {
		return true
	}

	return false
}

// SetTotalClv gets a reference to the given NullableFloat32 and assigns it to the TotalClv field.
func (o *PredictiveAnalytics) SetTotalClv(v float32) {
	o.TotalClv.Set(&v)
}
// SetTotalClvNil sets the value for TotalClv to be an explicit nil
func (o *PredictiveAnalytics) SetTotalClvNil() {
	o.TotalClv.Set(nil)
}

// UnsetTotalClv ensures that no value is present for TotalClv, not even an explicit nil
func (o *PredictiveAnalytics) UnsetTotalClv() {
	o.TotalClv.Unset()
}

// GetHistoricNumberOfOrders returns the HistoricNumberOfOrders field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PredictiveAnalytics) GetHistoricNumberOfOrders() int32 {
	if o == nil || IsNil(o.HistoricNumberOfOrders.Get()) {
		var ret int32
		return ret
	}
	return *o.HistoricNumberOfOrders.Get()
}

// GetHistoricNumberOfOrdersOk returns a tuple with the HistoricNumberOfOrders field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PredictiveAnalytics) GetHistoricNumberOfOrdersOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.HistoricNumberOfOrders.Get(), o.HistoricNumberOfOrders.IsSet()
}

// HasHistoricNumberOfOrders returns a boolean if a field has been set.
func (o *PredictiveAnalytics) HasHistoricNumberOfOrders() bool {
	if o != nil && o.HistoricNumberOfOrders.IsSet() {
		return true
	}

	return false
}

// SetHistoricNumberOfOrders gets a reference to the given NullableInt32 and assigns it to the HistoricNumberOfOrders field.
func (o *PredictiveAnalytics) SetHistoricNumberOfOrders(v int32) {
	o.HistoricNumberOfOrders.Set(&v)
}
// SetHistoricNumberOfOrdersNil sets the value for HistoricNumberOfOrders to be an explicit nil
func (o *PredictiveAnalytics) SetHistoricNumberOfOrdersNil() {
	o.HistoricNumberOfOrders.Set(nil)
}

// UnsetHistoricNumberOfOrders ensures that no value is present for HistoricNumberOfOrders, not even an explicit nil
func (o *PredictiveAnalytics) UnsetHistoricNumberOfOrders() {
	o.HistoricNumberOfOrders.Unset()
}

// GetPredictedNumberOfOrders returns the PredictedNumberOfOrders field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PredictiveAnalytics) GetPredictedNumberOfOrders() float32 {
	if o == nil || IsNil(o.PredictedNumberOfOrders.Get()) {
		var ret float32
		return ret
	}
	return *o.PredictedNumberOfOrders.Get()
}

// GetPredictedNumberOfOrdersOk returns a tuple with the PredictedNumberOfOrders field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PredictiveAnalytics) GetPredictedNumberOfOrdersOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PredictedNumberOfOrders.Get(), o.PredictedNumberOfOrders.IsSet()
}

// HasPredictedNumberOfOrders returns a boolean if a field has been set.
func (o *PredictiveAnalytics) HasPredictedNumberOfOrders() bool {
	if o != nil && o.PredictedNumberOfOrders.IsSet() {
		return true
	}

	return false
}

// SetPredictedNumberOfOrders gets a reference to the given NullableFloat32 and assigns it to the PredictedNumberOfOrders field.
func (o *PredictiveAnalytics) SetPredictedNumberOfOrders(v float32) {
	o.PredictedNumberOfOrders.Set(&v)
}
// SetPredictedNumberOfOrdersNil sets the value for PredictedNumberOfOrders to be an explicit nil
func (o *PredictiveAnalytics) SetPredictedNumberOfOrdersNil() {
	o.PredictedNumberOfOrders.Set(nil)
}

// UnsetPredictedNumberOfOrders ensures that no value is present for PredictedNumberOfOrders, not even an explicit nil
func (o *PredictiveAnalytics) UnsetPredictedNumberOfOrders() {
	o.PredictedNumberOfOrders.Unset()
}

// GetAverageDaysBetweenOrders returns the AverageDaysBetweenOrders field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PredictiveAnalytics) GetAverageDaysBetweenOrders() float32 {
	if o == nil || IsNil(o.AverageDaysBetweenOrders.Get()) {
		var ret float32
		return ret
	}
	return *o.AverageDaysBetweenOrders.Get()
}

// GetAverageDaysBetweenOrdersOk returns a tuple with the AverageDaysBetweenOrders field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PredictiveAnalytics) GetAverageDaysBetweenOrdersOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AverageDaysBetweenOrders.Get(), o.AverageDaysBetweenOrders.IsSet()
}

// HasAverageDaysBetweenOrders returns a boolean if a field has been set.
func (o *PredictiveAnalytics) HasAverageDaysBetweenOrders() bool {
	if o != nil && o.AverageDaysBetweenOrders.IsSet() {
		return true
	}

	return false
}

// SetAverageDaysBetweenOrders gets a reference to the given NullableFloat32 and assigns it to the AverageDaysBetweenOrders field.
func (o *PredictiveAnalytics) SetAverageDaysBetweenOrders(v float32) {
	o.AverageDaysBetweenOrders.Set(&v)
}
// SetAverageDaysBetweenOrdersNil sets the value for AverageDaysBetweenOrders to be an explicit nil
func (o *PredictiveAnalytics) SetAverageDaysBetweenOrdersNil() {
	o.AverageDaysBetweenOrders.Set(nil)
}

// UnsetAverageDaysBetweenOrders ensures that no value is present for AverageDaysBetweenOrders, not even an explicit nil
func (o *PredictiveAnalytics) UnsetAverageDaysBetweenOrders() {
	o.AverageDaysBetweenOrders.Unset()
}

// GetAverageOrderValue returns the AverageOrderValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PredictiveAnalytics) GetAverageOrderValue() float32 {
	if o == nil || IsNil(o.AverageOrderValue.Get()) {
		var ret float32
		return ret
	}
	return *o.AverageOrderValue.Get()
}

// GetAverageOrderValueOk returns a tuple with the AverageOrderValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PredictiveAnalytics) GetAverageOrderValueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AverageOrderValue.Get(), o.AverageOrderValue.IsSet()
}

// HasAverageOrderValue returns a boolean if a field has been set.
func (o *PredictiveAnalytics) HasAverageOrderValue() bool {
	if o != nil && o.AverageOrderValue.IsSet() {
		return true
	}

	return false
}

// SetAverageOrderValue gets a reference to the given NullableFloat32 and assigns it to the AverageOrderValue field.
func (o *PredictiveAnalytics) SetAverageOrderValue(v float32) {
	o.AverageOrderValue.Set(&v)
}
// SetAverageOrderValueNil sets the value for AverageOrderValue to be an explicit nil
func (o *PredictiveAnalytics) SetAverageOrderValueNil() {
	o.AverageOrderValue.Set(nil)
}

// UnsetAverageOrderValue ensures that no value is present for AverageOrderValue, not even an explicit nil
func (o *PredictiveAnalytics) UnsetAverageOrderValue() {
	o.AverageOrderValue.Unset()
}

// GetChurnProbability returns the ChurnProbability field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PredictiveAnalytics) GetChurnProbability() float32 {
	if o == nil || IsNil(o.ChurnProbability.Get()) {
		var ret float32
		return ret
	}
	return *o.ChurnProbability.Get()
}

// GetChurnProbabilityOk returns a tuple with the ChurnProbability field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PredictiveAnalytics) GetChurnProbabilityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChurnProbability.Get(), o.ChurnProbability.IsSet()
}

// HasChurnProbability returns a boolean if a field has been set.
func (o *PredictiveAnalytics) HasChurnProbability() bool {
	if o != nil && o.ChurnProbability.IsSet() {
		return true
	}

	return false
}

// SetChurnProbability gets a reference to the given NullableFloat32 and assigns it to the ChurnProbability field.
func (o *PredictiveAnalytics) SetChurnProbability(v float32) {
	o.ChurnProbability.Set(&v)
}
// SetChurnProbabilityNil sets the value for ChurnProbability to be an explicit nil
func (o *PredictiveAnalytics) SetChurnProbabilityNil() {
	o.ChurnProbability.Set(nil)
}

// UnsetChurnProbability ensures that no value is present for ChurnProbability, not even an explicit nil
func (o *PredictiveAnalytics) UnsetChurnProbability() {
	o.ChurnProbability.Unset()
}

// GetExpectedDateOfNextOrder returns the ExpectedDateOfNextOrder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PredictiveAnalytics) GetExpectedDateOfNextOrder() time.Time {
	if o == nil || IsNil(o.ExpectedDateOfNextOrder.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ExpectedDateOfNextOrder.Get()
}

// GetExpectedDateOfNextOrderOk returns a tuple with the ExpectedDateOfNextOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PredictiveAnalytics) GetExpectedDateOfNextOrderOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpectedDateOfNextOrder.Get(), o.ExpectedDateOfNextOrder.IsSet()
}

// HasExpectedDateOfNextOrder returns a boolean if a field has been set.
func (o *PredictiveAnalytics) HasExpectedDateOfNextOrder() bool {
	if o != nil && o.ExpectedDateOfNextOrder.IsSet() {
		return true
	}

	return false
}

// SetExpectedDateOfNextOrder gets a reference to the given NullableTime and assigns it to the ExpectedDateOfNextOrder field.
func (o *PredictiveAnalytics) SetExpectedDateOfNextOrder(v time.Time) {
	o.ExpectedDateOfNextOrder.Set(&v)
}
// SetExpectedDateOfNextOrderNil sets the value for ExpectedDateOfNextOrder to be an explicit nil
func (o *PredictiveAnalytics) SetExpectedDateOfNextOrderNil() {
	o.ExpectedDateOfNextOrder.Set(nil)
}

// UnsetExpectedDateOfNextOrder ensures that no value is present for ExpectedDateOfNextOrder, not even an explicit nil
func (o *PredictiveAnalytics) UnsetExpectedDateOfNextOrder() {
	o.ExpectedDateOfNextOrder.Unset()
}

func (o PredictiveAnalytics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PredictiveAnalytics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.HistoricClv.IsSet() {
		toSerialize["historic_clv"] = o.HistoricClv.Get()
	}
	if o.PredictedClv.IsSet() {
		toSerialize["predicted_clv"] = o.PredictedClv.Get()
	}
	if o.TotalClv.IsSet() {
		toSerialize["total_clv"] = o.TotalClv.Get()
	}
	if o.HistoricNumberOfOrders.IsSet() {
		toSerialize["historic_number_of_orders"] = o.HistoricNumberOfOrders.Get()
	}
	if o.PredictedNumberOfOrders.IsSet() {
		toSerialize["predicted_number_of_orders"] = o.PredictedNumberOfOrders.Get()
	}
	if o.AverageDaysBetweenOrders.IsSet() {
		toSerialize["average_days_between_orders"] = o.AverageDaysBetweenOrders.Get()
	}
	if o.AverageOrderValue.IsSet() {
		toSerialize["average_order_value"] = o.AverageOrderValue.Get()
	}
	if o.ChurnProbability.IsSet() {
		toSerialize["churn_probability"] = o.ChurnProbability.Get()
	}
	if o.ExpectedDateOfNextOrder.IsSet() {
		toSerialize["expected_date_of_next_order"] = o.ExpectedDateOfNextOrder.Get()
	}
	return toSerialize, nil
}

type NullablePredictiveAnalytics struct {
	value *PredictiveAnalytics
	isSet bool
}

func (v NullablePredictiveAnalytics) Get() *PredictiveAnalytics {
	return v.value
}

func (v *NullablePredictiveAnalytics) Set(val *PredictiveAnalytics) {
	v.value = val
	v.isSet = true
}

func (v NullablePredictiveAnalytics) IsSet() bool {
	return v.isSet
}

func (v *NullablePredictiveAnalytics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePredictiveAnalytics(val *PredictiveAnalytics) *NullablePredictiveAnalytics {
	return &NullablePredictiveAnalytics{value: val, isSet: true}
}

func (v NullablePredictiveAnalytics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePredictiveAnalytics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


