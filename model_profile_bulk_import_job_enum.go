/*
Klaviyo API

The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.

API version: 2024-02-15
Contact: developers@klaviyo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package klaviyo

import (
	"encoding/json"
	"fmt"
)

// ProfileBulkImportJobEnum the model 'ProfileBulkImportJobEnum'
type ProfileBulkImportJobEnum string

// List of ProfileBulkImportJobEnum
const (
	PROFILE_BULK_IMPORT_JOB ProfileBulkImportJobEnum = "profile-bulk-import-job"
)

// All allowed values of ProfileBulkImportJobEnum enum
var AllowedProfileBulkImportJobEnumEnumValues = []ProfileBulkImportJobEnum{
	"profile-bulk-import-job",
}

func (v *ProfileBulkImportJobEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ProfileBulkImportJobEnum(value)
	for _, existing := range AllowedProfileBulkImportJobEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ProfileBulkImportJobEnum", value)
}

// NewProfileBulkImportJobEnumFromValue returns a pointer to a valid ProfileBulkImportJobEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewProfileBulkImportJobEnumFromValue(v string) (*ProfileBulkImportJobEnum, error) {
	ev := ProfileBulkImportJobEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ProfileBulkImportJobEnum: valid values are %v", v, AllowedProfileBulkImportJobEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ProfileBulkImportJobEnum) IsValid() bool {
	for _, existing := range AllowedProfileBulkImportJobEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ProfileBulkImportJobEnum value
func (v ProfileBulkImportJobEnum) Ptr() *ProfileBulkImportJobEnum {
	return &v
}

type NullableProfileBulkImportJobEnum struct {
	value *ProfileBulkImportJobEnum
	isSet bool
}

func (v NullableProfileBulkImportJobEnum) Get() *ProfileBulkImportJobEnum {
	return v.value
}

func (v *NullableProfileBulkImportJobEnum) Set(val *ProfileBulkImportJobEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileBulkImportJobEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileBulkImportJobEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileBulkImportJobEnum(val *ProfileBulkImportJobEnum) *NullableProfileBulkImportJobEnum {
	return &NullableProfileBulkImportJobEnum{value: val, isSet: true}
}

func (v NullableProfileBulkImportJobEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileBulkImportJobEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

